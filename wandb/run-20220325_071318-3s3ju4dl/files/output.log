Skip loading parameter 'roi_heads.box_predictor.cls_score.weight' to the model due to incompatible shapes: (81, 1024) in the checkpoint but (11, 1024) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.cls_score.bias' to the model due to incompatible shapes: (81,) in the checkpoint but (11,) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.weight' to the model due to incompatible shapes: (320, 1024) in the checkpoint but (40, 1024) in the model! You might want to double check if this is expected.
Skip loading parameter 'roi_heads.box_predictor.bbox_pred.bias' to the model due to incompatible shapes: (320,) in the checkpoint but (40,) in the model! You might want to double check if this is expected.
Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}
[34mroi_heads.box_predictor.cls_score.{bias, weight}
[32m[03/25 07:13:23 d2.engine.defaults]: [39mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=11, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=40, bias=True)
    )
  )
)
[32m[03/25 07:13:24 d2.data.datasets.coco]: [39mLoaded 4883 images in COCO format from ../../dataset/train.json
[32m[03/25 07:13:24 d2.data.build]: [39mRemoved 0 images with no usable annotations. 4883 images left.
[32m[03/25 07:13:24 d2.data.build]: [39mDistribution of instances among all 10 categories:
[36m|   category    | #instances   |  category   | #instances   |  category  | #instances   |
[36m|:-------------:|:-------------|:-----------:|:-------------|:----------:|:-------------|
[36m| General trash | 3966         |    Paper    | 6352         | Paper pack | 897          |
[36m|     Metal     | 936          |    Glass    | 982          |  Plastic   | 2943         |
[36m|   Styrofoam   | 1263         | Plastic bag | 5178         |  Battery   | 159          |
[36m|   Clothing    | 468          |             |              |            |              |
[36m|     total     | 23144        |             |              |            |              |
[32m[03/25 07:13:24 d2.data.build]: [39mUsing training sampler TrainingSampler
[32m[03/25 07:13:24 d2.data.common]: [39mSerializing 4883 elements to byte tensors and concatenating them all ...
[32m[03/25 07:13:24 d2.data.common]: [39mSerialized dataset takes 2.19 MiB
expected_results:
[]
[32m[03/25 07:13:24 d2.engine.train_loop]: [39mStarting training from iteration 0
/opt/ml/detection/baseline/detectron2/detectron2/modeling/roi_heads/fast_rcnn.py:103: UserWarning: This overload of nonzero is deprecated:
	nonzero()
Consider using one of the following signatures instead:
	nonzero(*, bool as_tuple) (Triggered internally at  /opt/conda/conda-bld/pytorch_1607370156314/work/torch/csrc/utils/python_arg_parser.cpp:882.)
  num_fg = fg_inds.nonzero().numel()
[32m[03/25 07:13:37 d2.utils.events]: [39m eta: 2:24:36  iter: 19  total_loss: 3.365  loss_cls: 2.447  loss_box_reg: 0.7415  loss_rpn_cls: 0.1164  loss_rpn_loc: 0.05781  time: 0.5807  data_time: 0.0300  lr: 1.9981e-05  max_mem: 6307M
[32m[03/25 07:13:49 d2.utils.events]: [39m eta: 2:24:41  iter: 39  total_loss: 2.927  loss_cls: 1.991  loss_box_reg: 0.7825  loss_rpn_cls: 0.07624  loss_rpn_loc: 0.03692  time: 0.5832  data_time: 0.0122  lr: 3.9961e-05  max_mem: 6307M
[32m[03/25 07:14:00 d2.utils.events]: [39m eta: 2:24:26  iter: 59  total_loss: 2.054  loss_cls: 1.273  loss_box_reg: 0.7283  loss_rpn_cls: 0.03952  loss_rpn_loc: 0.02686  time: 0.5833  data_time: 0.0131  lr: 5.9941e-05  max_mem: 6307M
[32m[03/25 07:14:12 d2.utils.events]: [39m eta: 2:24:18  iter: 79  total_loss: 1.465  loss_cls: 0.7678  loss_box_reg: 0.663  loss_rpn_cls: 0.04918  loss_rpn_loc: 0.01949  time: 0.5830  data_time: 0.0134  lr: 7.9921e-05  max_mem: 6307M
[32m[03/25 07:14:24 d2.utils.events]: [39m eta: 2:24:02  iter: 99  total_loss: 1.554  loss_cls: 0.7424  loss_box_reg: 0.7159  loss_rpn_cls: 0.05059  loss_rpn_loc: 0.02694  time: 0.5821  data_time: 0.0123  lr: 9.9901e-05  max_mem: 6307M
[32m[03/25 07:14:35 d2.utils.events]: [39m eta: 2:23:48  iter: 119  total_loss: 1.448  loss_cls: 0.709  loss_box_reg: 0.6834  loss_rpn_cls: 0.03151  loss_rpn_loc: 0.03018  time: 0.5819  data_time: 0.0123  lr: 0.00011988  max_mem: 6307M
[32m[03/25 07:14:47 d2.utils.events]: [39m eta: 2:23:41  iter: 139  total_loss: 1.445  loss_cls: 0.7101  loss_box_reg: 0.7148  loss_rpn_cls: 0.02833  loss_rpn_loc: 0.01656  time: 0.5822  data_time: 0.0133  lr: 0.00013986  max_mem: 6307M
[32m[03/25 07:14:59 d2.utils.events]: [39m eta: 2:23:29  iter: 159  total_loss: 1.464  loss_cls: 0.6511  loss_box_reg: 0.7313  loss_rpn_cls: 0.02716  loss_rpn_loc: 0.02072  time: 0.5821  data_time: 0.0126  lr: 0.00015984  max_mem: 6307M
[32m[03/25 07:15:10 d2.utils.events]: [39m eta: 2:23:13  iter: 179  total_loss: 1.457  loss_cls: 0.6772  loss_box_reg: 0.7368  loss_rpn_cls: 0.0419  loss_rpn_loc: 0.02431  time: 0.5817  data_time: 0.0124  lr: 0.00017982  max_mem: 6307M
[32m[03/25 07:15:22 d2.utils.events]: [39m eta: 2:22:59  iter: 199  total_loss: 1.321  loss_cls: 0.6053  loss_box_reg: 0.6364  loss_rpn_cls: 0.03562  loss_rpn_loc: 0.02933  time: 0.5814  data_time: 0.0127  lr: 0.0001998  max_mem: 6307M
[32m[03/25 07:15:33 d2.utils.events]: [39m eta: 2:22:49  iter: 219  total_loss: 1.479  loss_cls: 0.6667  loss_box_reg: 0.7169  loss_rpn_cls: 0.04555  loss_rpn_loc: 0.03095  time: 0.5815  data_time: 0.0130  lr: 0.00021978  max_mem: 6307M
[32m[03/25 07:15:45 d2.utils.events]: [39m eta: 2:22:41  iter: 239  total_loss: 1.347  loss_cls: 0.5809  loss_box_reg: 0.689  loss_rpn_cls: 0.02344  loss_rpn_loc: 0.02921  time: 0.5815  data_time: 0.0126  lr: 0.00023976  max_mem: 6307M
[32m[03/25 07:15:57 d2.utils.events]: [39m eta: 2:22:31  iter: 259  total_loss: 1.457  loss_cls: 0.6627  loss_box_reg: 0.6901  loss_rpn_cls: 0.03271  loss_rpn_loc: 0.03829  time: 0.5816  data_time: 0.0129  lr: 0.00025974  max_mem: 6307M
[32m[03/25 07:16:08 d2.utils.events]: [39m eta: 2:22:19  iter: 279  total_loss: 1.349  loss_cls: 0.5992  loss_box_reg: 0.6891  loss_rpn_cls: 0.02322  loss_rpn_loc: 0.02761  time: 0.5816  data_time: 0.0126  lr: 0.00027972  max_mem: 6307M
[32m[03/25 07:16:20 d2.utils.events]: [39m eta: 2:22:11  iter: 299  total_loss: 1.351  loss_cls: 0.6141  loss_box_reg: 0.6574  loss_rpn_cls: 0.02937  loss_rpn_loc: 0.04397  time: 0.5818  data_time: 0.0138  lr: 0.0002997  max_mem: 6307M
[32m[03/25 07:16:32 d2.utils.events]: [39m eta: 2:22:02  iter: 319  total_loss: 1.282  loss_cls: 0.5929  loss_box_reg: 0.6351  loss_rpn_cls: 0.02236  loss_rpn_loc: 0.0309  time: 0.5818  data_time: 0.0124  lr: 0.00031968  max_mem: 6307M
[32m[03/25 07:16:43 d2.utils.events]: [39m eta: 2:21:51  iter: 339  total_loss: 1.26  loss_cls: 0.5981  loss_box_reg: 0.6247  loss_rpn_cls: 0.03217  loss_rpn_loc: 0.02841  time: 0.5819  data_time: 0.0128  lr: 0.00033966  max_mem: 6307M
[32m[03/25 07:16:55 d2.utils.events]: [39m eta: 2:21:41  iter: 359  total_loss: 1.258  loss_cls: 0.5684  loss_box_reg: 0.5445  loss_rpn_cls: 0.03853  loss_rpn_loc: 0.03266  time: 0.5822  data_time: 0.0163  lr: 0.00035964  max_mem: 6307M
[32m[03/25 07:17:07 d2.utils.events]: [39m eta: 2:21:32  iter: 379  total_loss: 1.162  loss_cls: 0.5246  loss_box_reg: 0.4874  loss_rpn_cls: 0.05044  loss_rpn_loc: 0.03225  time: 0.5825  data_time: 0.0160  lr: 0.00037962  max_mem: 6307M
[32m[03/25 07:17:19 d2.utils.events]: [39m eta: 2:21:23  iter: 399  total_loss: 1.06  loss_cls: 0.5549  loss_box_reg: 0.4704  loss_rpn_cls: 0.0243  loss_rpn_loc: 0.02235  time: 0.5825  data_time: 0.0135  lr: 0.0003996  max_mem: 6307M
[32m[03/25 07:17:30 d2.utils.events]: [39m eta: 2:21:13  iter: 419  total_loss: 0.971  loss_cls: 0.4775  loss_box_reg: 0.4405  loss_rpn_cls: 0.02964  loss_rpn_loc: 0.0272  time: 0.5826  data_time: 0.0135  lr: 0.00041958  max_mem: 6307M
[32m[03/25 07:17:42 d2.utils.events]: [39m eta: 2:20:57  iter: 439  total_loss: 1.014  loss_cls: 0.5514  loss_box_reg: 0.4202  loss_rpn_cls: 0.03733  loss_rpn_loc: 0.02407  time: 0.5824  data_time: 0.0132  lr: 0.00043956  max_mem: 6307M
[32m[03/25 07:17:54 d2.utils.events]: [39m eta: 2:20:45  iter: 459  total_loss: 0.9667  loss_cls: 0.5088  loss_box_reg: 0.3869  loss_rpn_cls: 0.02927  loss_rpn_loc: 0.02722  time: 0.5823  data_time: 0.0139  lr: 0.00045954  max_mem: 6307M
[32m[03/25 07:18:05 d2.utils.events]: [39m eta: 2:20:33  iter: 479  total_loss: 0.9458  loss_cls: 0.4908  loss_box_reg: 0.3428  loss_rpn_cls: 0.04072  loss_rpn_loc: 0.04162  time: 0.5824  data_time: 0.0143  lr: 0.00047952  max_mem: 6307M
[32m[03/25 07:18:17 d2.utils.events]: [39m eta: 2:20:21  iter: 499  total_loss: 0.9886  loss_cls: 0.522  loss_box_reg: 0.3978  loss_rpn_cls: 0.0288  loss_rpn_loc: 0.02334  time: 0.5825  data_time: 0.0134  lr: 0.0004995  max_mem: 6307M
[32m[03/25 07:18:29 d2.utils.events]: [39m eta: 2:20:09  iter: 519  total_loss: 0.9692  loss_cls: 0.4985  loss_box_reg: 0.3847  loss_rpn_cls: 0.02606  loss_rpn_loc: 0.02368  time: 0.5825  data_time: 0.0129  lr: 0.00051948  max_mem: 6307M
[32m[03/25 07:18:40 d2.utils.events]: [39m eta: 2:19:58  iter: 539  total_loss: 1.011  loss_cls: 0.5434  loss_box_reg: 0.3927  loss_rpn_cls: 0.02461  loss_rpn_loc: 0.02622  time: 0.5827  data_time: 0.0146  lr: 0.00053946  max_mem: 6307M
[32m[03/25 07:18:52 d2.utils.events]: [39m eta: 2:19:47  iter: 559  total_loss: 0.8909  loss_cls: 0.4954  loss_box_reg: 0.3526  loss_rpn_cls: 0.03361  loss_rpn_loc: 0.01995  time: 0.5828  data_time: 0.0128  lr: 0.00055944  max_mem: 6307M
[32m[03/25 07:19:04 d2.utils.events]: [39m eta: 2:19:38  iter: 579  total_loss: 0.8825  loss_cls: 0.4925  loss_box_reg: 0.3488  loss_rpn_cls: 0.03502  loss_rpn_loc: 0.02162  time: 0.5830  data_time: 0.0142  lr: 0.00057942  max_mem: 6307M
[32m[03/25 07:19:16 d2.utils.events]: [39m eta: 2:19:27  iter: 599  total_loss: 0.8885  loss_cls: 0.5242  loss_box_reg: 0.361  loss_rpn_cls: 0.0198  loss_rpn_loc: 0.02722  time: 0.5829  data_time: 0.0129  lr: 0.0005994  max_mem: 6307M
[32m[03/25 07:19:27 d2.utils.events]: [39m eta: 2:19:16  iter: 619  total_loss: 0.9025  loss_cls: 0.5147  loss_box_reg: 0.3104  loss_rpn_cls: 0.04112  loss_rpn_loc: 0.02155  time: 0.5829  data_time: 0.0127  lr: 0.00061938  max_mem: 6307M
[32m[03/25 07:19:39 d2.utils.events]: [39m eta: 2:19:05  iter: 639  total_loss: 0.9583  loss_cls: 0.4966  loss_box_reg: 0.3422  loss_rpn_cls: 0.03044  loss_rpn_loc: 0.02956  time: 0.5830  data_time: 0.0136  lr: 0.00063936  max_mem: 6307M
[32m[03/25 07:19:51 d2.utils.events]: [39m eta: 2:18:54  iter: 659  total_loss: 0.9527  loss_cls: 0.4719  loss_box_reg: 0.4041  loss_rpn_cls: 0.0292  loss_rpn_loc: 0.04453  time: 0.5830  data_time: 0.0148  lr: 0.00065934  max_mem: 6307M
[32m[03/25 07:20:02 d2.utils.events]: [39m eta: 2:18:41  iter: 679  total_loss: 0.9476  loss_cls: 0.5015  loss_box_reg: 0.3498  loss_rpn_cls: 0.0381  loss_rpn_loc: 0.03323  time: 0.5830  data_time: 0.0146  lr: 0.00067932  max_mem: 6307M
[32m[03/25 07:20:14 d2.utils.events]: [39m eta: 2:18:30  iter: 699  total_loss: 0.929  loss_cls: 0.4944  loss_box_reg: 0.3653  loss_rpn_cls: 0.03748  loss_rpn_loc: 0.02107  time: 0.5831  data_time: 0.0133  lr: 0.0006993  max_mem: 6307M
[32m[03/25 07:20:26 d2.utils.events]: [39m eta: 2:18:16  iter: 719  total_loss: 0.8747  loss_cls: 0.4807  loss_box_reg: 0.2969  loss_rpn_cls: 0.02897  loss_rpn_loc: 0.0338  time: 0.5829  data_time: 0.0127  lr: 0.00071928  max_mem: 6307M
[32m[03/25 07:20:37 d2.utils.events]: [39m eta: 2:18:03  iter: 739  total_loss: 0.8259  loss_cls: 0.4339  loss_box_reg: 0.2724  loss_rpn_cls: 0.035  loss_rpn_loc: 0.02137  time: 0.5829  data_time: 0.0131  lr: 0.00073926  max_mem: 6307M
[32m[03/25 07:20:49 d2.utils.events]: [39m eta: 2:17:51  iter: 759  total_loss: 0.9293  loss_cls: 0.4414  loss_box_reg: 0.3477  loss_rpn_cls: 0.02935  loss_rpn_loc: 0.03525  time: 0.5827  data_time: 0.0127  lr: 0.00075924  max_mem: 6307M
[32m[03/25 07:21:00 d2.utils.events]: [39m eta: 2:17:38  iter: 779  total_loss: 0.7515  loss_cls: 0.4525  loss_box_reg: 0.2589  loss_rpn_cls: 0.03013  loss_rpn_loc: 0.03564  time: 0.5827  data_time: 0.0126  lr: 0.00077922  max_mem: 6307M
[32m[03/25 07:21:12 d2.utils.events]: [39m eta: 2:17:27  iter: 799  total_loss: 0.8512  loss_cls: 0.4949  loss_box_reg: 0.3132  loss_rpn_cls: 0.02776  loss_rpn_loc: 0.03017  time: 0.5826  data_time: 0.0127  lr: 0.0007992  max_mem: 6307M
[32m[03/25 07:21:24 d2.utils.events]: [39m eta: 2:17:15  iter: 819  total_loss: 0.8077  loss_cls: 0.4343  loss_box_reg: 0.286  loss_rpn_cls: 0.02272  loss_rpn_loc: 0.02465  time: 0.5826  data_time: 0.0148  lr: 0.00081918  max_mem: 6307M
[32m[03/25 07:21:35 d2.utils.events]: [39m eta: 2:17:03  iter: 839  total_loss: 0.9418  loss_cls: 0.5161  loss_box_reg: 0.353  loss_rpn_cls: 0.03936  loss_rpn_loc: 0.03393  time: 0.5826  data_time: 0.0127  lr: 0.00083916  max_mem: 6307M
[32m[03/25 07:21:47 d2.utils.events]: [39m eta: 2:16:52  iter: 859  total_loss: 0.9465  loss_cls: 0.517  loss_box_reg: 0.367  loss_rpn_cls: 0.04163  loss_rpn_loc: 0.04238  time: 0.5825  data_time: 0.0125  lr: 0.00085914  max_mem: 6307M
[32m[03/25 07:21:59 d2.utils.events]: [39m eta: 2:16:40  iter: 879  total_loss: 0.7965  loss_cls: 0.4559  loss_box_reg: 0.3034  loss_rpn_cls: 0.03538  loss_rpn_loc: 0.02702  time: 0.5825  data_time: 0.0126  lr: 0.00087912  max_mem: 6307M
[32m[03/25 07:22:10 d2.utils.events]: [39m eta: 2:16:29  iter: 899  total_loss: 0.8732  loss_cls: 0.4433  loss_box_reg: 0.3073  loss_rpn_cls: 0.02392  loss_rpn_loc: 0.02569  time: 0.5826  data_time: 0.0131  lr: 0.0008991  max_mem: 6307M
[32m[03/25 07:22:22 d2.utils.events]: [39m eta: 2:16:18  iter: 919  total_loss: 0.9114  loss_cls: 0.4981  loss_box_reg: 0.336  loss_rpn_cls: 0.02357  loss_rpn_loc: 0.03382  time: 0.5826  data_time: 0.0124  lr: 0.00091908  max_mem: 6307M
[32m[03/25 07:22:34 d2.utils.events]: [39m eta: 2:16:06  iter: 939  total_loss: 0.8496  loss_cls: 0.4864  loss_box_reg: 0.3184  loss_rpn_cls: 0.01992  loss_rpn_loc: 0.01806  time: 0.5826  data_time: 0.0128  lr: 0.00093906  max_mem: 6307M
[32m[03/25 07:22:45 d2.utils.events]: [39m eta: 2:15:55  iter: 959  total_loss: 0.8881  loss_cls: 0.477  loss_box_reg: 0.3223  loss_rpn_cls: 0.02537  loss_rpn_loc: 0.0312  time: 0.5827  data_time: 0.0134  lr: 0.00095904  max_mem: 6307M
[32m[03/25 07:22:57 d2.utils.events]: [39m eta: 2:15:43  iter: 979  total_loss: 0.8445  loss_cls: 0.4493  loss_box_reg: 0.2942  loss_rpn_cls: 0.02007  loss_rpn_loc: 0.02402  time: 0.5826  data_time: 0.0125  lr: 0.00097902  max_mem: 6307M
[32m[03/25 07:23:09 d2.utils.events]: [39m eta: 2:15:32  iter: 999  total_loss: 0.8316  loss_cls: 0.4808  loss_box_reg: 0.3152  loss_rpn_cls: 0.0185  loss_rpn_loc: 0.01902  time: 0.5826  data_time: 0.0124  lr: 0.000999  max_mem: 6307M
[32m[03/25 07:23:20 d2.utils.events]: [39m eta: 2:15:20  iter: 1019  total_loss: 0.9657  loss_cls: 0.4743  loss_box_reg: 0.3825  loss_rpn_cls: 0.03375  loss_rpn_loc: 0.02945  time: 0.5826  data_time: 0.0124  lr: 0.001  max_mem: 6307M
[32m[03/25 07:23:32 d2.utils.events]: [39m eta: 2:15:08  iter: 1039  total_loss: 0.8841  loss_cls: 0.4519  loss_box_reg: 0.3125  loss_rpn_cls: 0.02036  loss_rpn_loc: 0.02545  time: 0.5825  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 07:23:44 d2.utils.events]: [39m eta: 2:14:56  iter: 1059  total_loss: 0.9473  loss_cls: 0.5345  loss_box_reg: 0.3263  loss_rpn_cls: 0.02195  loss_rpn_loc: 0.02013  time: 0.5824  data_time: 0.0126  lr: 0.001  max_mem: 6307M
[32m[03/25 07:23:55 d2.utils.events]: [39m eta: 2:14:44  iter: 1079  total_loss: 0.8809  loss_cls: 0.4752  loss_box_reg: 0.3039  loss_rpn_cls: 0.02438  loss_rpn_loc: 0.02035  time: 0.5823  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 07:24:07 d2.utils.events]: [39m eta: 2:14:32  iter: 1099  total_loss: 0.9198  loss_cls: 0.4978  loss_box_reg: 0.3605  loss_rpn_cls: 0.02338  loss_rpn_loc: 0.03457  time: 0.5823  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 07:24:18 d2.utils.events]: [39m eta: 2:14:21  iter: 1119  total_loss: 0.8001  loss_cls: 0.4763  loss_box_reg: 0.2935  loss_rpn_cls: 0.01887  loss_rpn_loc: 0.02634  time: 0.5822  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 07:24:30 d2.utils.events]: [39m eta: 2:14:08  iter: 1139  total_loss: 0.8428  loss_cls: 0.47  loss_box_reg: 0.2997  loss_rpn_cls: 0.02435  loss_rpn_loc: 0.02769  time: 0.5821  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 07:24:42 d2.utils.events]: [39m eta: 2:13:56  iter: 1159  total_loss: 0.8571  loss_cls: 0.4543  loss_box_reg: 0.307  loss_rpn_cls: 0.01835  loss_rpn_loc: 0.02802  time: 0.5821  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:24:53 d2.utils.events]: [39m eta: 2:13:46  iter: 1179  total_loss: 0.8627  loss_cls: 0.4287  loss_box_reg: 0.3468  loss_rpn_cls: 0.02709  loss_rpn_loc: 0.02196  time: 0.5822  data_time: 0.0147  lr: 0.001  max_mem: 6307M
[32m[03/25 07:25:05 d2.utils.events]: [39m eta: 2:13:34  iter: 1199  total_loss: 0.7733  loss_cls: 0.4434  loss_box_reg: 0.2974  loss_rpn_cls: 0.01473  loss_rpn_loc: 0.02005  time: 0.5822  data_time: 0.0124  lr: 0.001  max_mem: 6307M
[32m[03/25 07:25:17 d2.utils.events]: [39m eta: 2:13:23  iter: 1219  total_loss: 0.8094  loss_cls: 0.4296  loss_box_reg: 0.3289  loss_rpn_cls: 0.02157  loss_rpn_loc: 0.02127  time: 0.5822  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:25:28 d2.utils.events]: [39m eta: 2:13:11  iter: 1239  total_loss: 0.75  loss_cls: 0.4162  loss_box_reg: 0.2812  loss_rpn_cls: 0.02366  loss_rpn_loc: 0.02489  time: 0.5822  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:25:40 d2.utils.events]: [39m eta: 2:12:59  iter: 1259  total_loss: 0.7934  loss_cls: 0.4377  loss_box_reg: 0.291  loss_rpn_cls: 0.02647  loss_rpn_loc: 0.02394  time: 0.5822  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:25:51 d2.utils.events]: [39m eta: 2:12:48  iter: 1279  total_loss: 0.8611  loss_cls: 0.4165  loss_box_reg: 0.3343  loss_rpn_cls: 0.02629  loss_rpn_loc: 0.0286  time: 0.5821  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:26:03 d2.utils.events]: [39m eta: 2:12:36  iter: 1299  total_loss: 0.8555  loss_cls: 0.4663  loss_box_reg: 0.3359  loss_rpn_cls: 0.0203  loss_rpn_loc: 0.0273  time: 0.5822  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:26:15 d2.utils.events]: [39m eta: 2:12:24  iter: 1319  total_loss: 0.8665  loss_cls: 0.4035  loss_box_reg: 0.3122  loss_rpn_cls: 0.03577  loss_rpn_loc: 0.0406  time: 0.5823  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:26:27 d2.utils.events]: [39m eta: 2:12:13  iter: 1339  total_loss: 0.7841  loss_cls: 0.4175  loss_box_reg: 0.3114  loss_rpn_cls: 0.02143  loss_rpn_loc: 0.02837  time: 0.5823  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:26:38 d2.utils.events]: [39m eta: 2:12:01  iter: 1359  total_loss: 0.8738  loss_cls: 0.4071  loss_box_reg: 0.318  loss_rpn_cls: 0.02659  loss_rpn_loc: 0.02349  time: 0.5823  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:26:50 d2.utils.events]: [39m eta: 2:11:48  iter: 1379  total_loss: 0.9279  loss_cls: 0.4803  loss_box_reg: 0.3093  loss_rpn_cls: 0.03252  loss_rpn_loc: 0.0344  time: 0.5823  data_time: 0.0129  lr: 0.001  max_mem: 6307M
[32m[03/25 07:27:02 d2.utils.events]: [39m eta: 2:11:35  iter: 1399  total_loss: 0.8425  loss_cls: 0.4164  loss_box_reg: 0.3092  loss_rpn_cls: 0.0184  loss_rpn_loc: 0.02229  time: 0.5823  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 07:27:13 d2.utils.events]: [39m eta: 2:11:23  iter: 1419  total_loss: 0.7825  loss_cls: 0.4402  loss_box_reg: 0.3049  loss_rpn_cls: 0.01441  loss_rpn_loc: 0.0229  time: 0.5823  data_time: 0.0128  lr: 0.001  max_mem: 6307M
[32m[03/25 07:27:25 d2.utils.events]: [39m eta: 2:11:13  iter: 1439  total_loss: 0.9278  loss_cls: 0.4464  loss_box_reg: 0.3163  loss_rpn_cls: 0.0242  loss_rpn_loc: 0.04385  time: 0.5823  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:27:37 d2.utils.events]: [39m eta: 2:11:02  iter: 1459  total_loss: 0.7302  loss_cls: 0.4174  loss_box_reg: 0.272  loss_rpn_cls: 0.02034  loss_rpn_loc: 0.02062  time: 0.5823  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:27:48 d2.utils.events]: [39m eta: 2:10:51  iter: 1479  total_loss: 0.787  loss_cls: 0.425  loss_box_reg: 0.3116  loss_rpn_cls: 0.02012  loss_rpn_loc: 0.0228  time: 0.5823  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:28:00 d2.utils.events]: [39m eta: 2:10:40  iter: 1499  total_loss: 0.7463  loss_cls: 0.4453  loss_box_reg: 0.2869  loss_rpn_cls: 0.02699  loss_rpn_loc: 0.0252  time: 0.5824  data_time: 0.0159  lr: 0.001  max_mem: 6307M
[32m[03/25 07:28:12 d2.utils.events]: [39m eta: 2:10:29  iter: 1519  total_loss: 0.7448  loss_cls: 0.4205  loss_box_reg: 0.2761  loss_rpn_cls: 0.0134  loss_rpn_loc: 0.01873  time: 0.5824  data_time: 0.0144  lr: 0.001  max_mem: 6307M
[32m[03/25 07:28:23 d2.utils.events]: [39m eta: 2:10:17  iter: 1539  total_loss: 0.8181  loss_cls: 0.4406  loss_box_reg: 0.297  loss_rpn_cls: 0.02005  loss_rpn_loc: 0.02365  time: 0.5824  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:28:35 d2.utils.events]: [39m eta: 2:10:05  iter: 1559  total_loss: 0.7517  loss_cls: 0.4424  loss_box_reg: 0.2834  loss_rpn_cls: 0.02279  loss_rpn_loc: 0.01658  time: 0.5825  data_time: 0.0156  lr: 0.001  max_mem: 6307M
[32m[03/25 07:28:47 d2.utils.events]: [39m eta: 2:09:54  iter: 1579  total_loss: 0.8446  loss_cls: 0.4563  loss_box_reg: 0.3285  loss_rpn_cls: 0.03531  loss_rpn_loc: 0.04464  time: 0.5825  data_time: 0.0138  lr: 0.001  max_mem: 6307M
[32m[03/25 07:28:59 d2.utils.events]: [39m eta: 2:09:41  iter: 1599  total_loss: 0.7285  loss_cls: 0.4019  loss_box_reg: 0.269  loss_rpn_cls: 0.01922  loss_rpn_loc: 0.02174  time: 0.5825  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:29:10 d2.utils.events]: [39m eta: 2:09:29  iter: 1619  total_loss: 0.8559  loss_cls: 0.474  loss_box_reg: 0.3052  loss_rpn_cls: 0.0209  loss_rpn_loc: 0.03438  time: 0.5825  data_time: 0.0143  lr: 0.001  max_mem: 6307M
[32m[03/25 07:29:22 d2.utils.events]: [39m eta: 2:09:18  iter: 1639  total_loss: 0.6771  loss_cls: 0.3922  loss_box_reg: 0.2646  loss_rpn_cls: 0.01801  loss_rpn_loc: 0.01758  time: 0.5826  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:29:34 d2.utils.events]: [39m eta: 2:09:07  iter: 1659  total_loss: 0.6865  loss_cls: 0.3807  loss_box_reg: 0.2613  loss_rpn_cls: 0.01598  loss_rpn_loc: 0.01644  time: 0.5826  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 07:29:45 d2.utils.events]: [39m eta: 2:08:56  iter: 1679  total_loss: 0.8308  loss_cls: 0.4843  loss_box_reg: 0.3202  loss_rpn_cls: 0.01772  loss_rpn_loc: 0.01871  time: 0.5826  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:29:57 d2.utils.events]: [39m eta: 2:08:45  iter: 1699  total_loss: 0.7993  loss_cls: 0.4558  loss_box_reg: 0.2727  loss_rpn_cls: 0.02136  loss_rpn_loc: 0.03169  time: 0.5826  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 07:30:09 d2.utils.events]: [39m eta: 2:08:35  iter: 1719  total_loss: 0.921  loss_cls: 0.4773  loss_box_reg: 0.35  loss_rpn_cls: 0.02108  loss_rpn_loc: 0.02429  time: 0.5826  data_time: 0.0126  lr: 0.001  max_mem: 6307M
[32m[03/25 07:30:21 d2.utils.events]: [39m eta: 2:08:24  iter: 1739  total_loss: 0.6519  loss_cls: 0.3907  loss_box_reg: 0.2425  loss_rpn_cls: 0.01608  loss_rpn_loc: 0.02808  time: 0.5827  data_time: 0.0147  lr: 0.001  max_mem: 6307M
[32m[03/25 07:30:32 d2.utils.events]: [39m eta: 2:08:12  iter: 1759  total_loss: 0.7901  loss_cls: 0.4765  loss_box_reg: 0.2605  loss_rpn_cls: 0.0298  loss_rpn_loc: 0.02075  time: 0.5827  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:30:44 d2.utils.events]: [39m eta: 2:08:01  iter: 1779  total_loss: 0.8363  loss_cls: 0.47  loss_box_reg: 0.2976  loss_rpn_cls: 0.03033  loss_rpn_loc: 0.03918  time: 0.5826  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:30:55 d2.utils.events]: [39m eta: 2:07:49  iter: 1799  total_loss: 0.887  loss_cls: 0.4947  loss_box_reg: 0.3223  loss_rpn_cls: 0.02906  loss_rpn_loc: 0.03438  time: 0.5826  data_time: 0.0128  lr: 0.001  max_mem: 6307M
[32m[03/25 07:31:07 d2.utils.events]: [39m eta: 2:07:37  iter: 1819  total_loss: 0.7581  loss_cls: 0.4376  loss_box_reg: 0.2503  loss_rpn_cls: 0.01384  loss_rpn_loc: 0.02252  time: 0.5825  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:31:19 d2.utils.events]: [39m eta: 2:07:25  iter: 1839  total_loss: 0.8775  loss_cls: 0.4549  loss_box_reg: 0.3206  loss_rpn_cls: 0.0276  loss_rpn_loc: 0.02987  time: 0.5826  data_time: 0.0143  lr: 0.001  max_mem: 6307M
[32m[03/25 07:31:30 d2.utils.events]: [39m eta: 2:07:14  iter: 1859  total_loss: 0.782  loss_cls: 0.4468  loss_box_reg: 0.2932  loss_rpn_cls: 0.0188  loss_rpn_loc: 0.02061  time: 0.5826  data_time: 0.0138  lr: 0.001  max_mem: 6307M
[32m[03/25 07:31:42 d2.utils.events]: [39m eta: 2:07:02  iter: 1879  total_loss: 0.8111  loss_cls: 0.3951  loss_box_reg: 0.3062  loss_rpn_cls: 0.0204  loss_rpn_loc: 0.03006  time: 0.5826  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:31:54 d2.utils.events]: [39m eta: 2:06:49  iter: 1899  total_loss: 0.7859  loss_cls: 0.4218  loss_box_reg: 0.2905  loss_rpn_cls: 0.01739  loss_rpn_loc: 0.03361  time: 0.5825  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:32:05 d2.utils.events]: [39m eta: 2:06:37  iter: 1919  total_loss: 0.7586  loss_cls: 0.4135  loss_box_reg: 0.2646  loss_rpn_cls: 0.01599  loss_rpn_loc: 0.01636  time: 0.5825  data_time: 0.0128  lr: 0.001  max_mem: 6307M
[32m[03/25 07:32:17 d2.utils.events]: [39m eta: 2:06:25  iter: 1939  total_loss: 0.8015  loss_cls: 0.4173  loss_box_reg: 0.3222  loss_rpn_cls: 0.02045  loss_rpn_loc: 0.03694  time: 0.5825  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:32:29 d2.utils.events]: [39m eta: 2:06:13  iter: 1959  total_loss: 0.7248  loss_cls: 0.3886  loss_box_reg: 0.2676  loss_rpn_cls: 0.02222  loss_rpn_loc: 0.02287  time: 0.5825  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 07:32:40 d2.utils.events]: [39m eta: 2:06:02  iter: 1979  total_loss: 0.748  loss_cls: 0.4183  loss_box_reg: 0.2347  loss_rpn_cls: 0.01876  loss_rpn_loc: 0.02029  time: 0.5826  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:32:52 d2.utils.events]: [39m eta: 2:05:51  iter: 1999  total_loss: 0.7762  loss_cls: 0.3899  loss_box_reg: 0.3038  loss_rpn_cls: 0.02039  loss_rpn_loc: 0.04102  time: 0.5826  data_time: 0.0148  lr: 0.001  max_mem: 6307M
[32m[03/25 07:33:04 d2.utils.events]: [39m eta: 2:05:40  iter: 2019  total_loss: 0.7653  loss_cls: 0.4436  loss_box_reg: 0.2897  loss_rpn_cls: 0.01795  loss_rpn_loc: 0.02117  time: 0.5826  data_time: 0.0141  lr: 0.001  max_mem: 6307M
[32m[03/25 07:33:15 d2.utils.events]: [39m eta: 2:05:29  iter: 2039  total_loss: 0.7385  loss_cls: 0.4128  loss_box_reg: 0.2848  loss_rpn_cls: 0.0283  loss_rpn_loc: 0.0302  time: 0.5826  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:33:27 d2.utils.events]: [39m eta: 2:05:18  iter: 2059  total_loss: 0.7233  loss_cls: 0.4083  loss_box_reg: 0.3056  loss_rpn_cls: 0.0226  loss_rpn_loc: 0.01857  time: 0.5826  data_time: 0.0129  lr: 0.001  max_mem: 6307M
[32m[03/25 07:33:39 d2.utils.events]: [39m eta: 2:05:07  iter: 2079  total_loss: 0.892  loss_cls: 0.4392  loss_box_reg: 0.3344  loss_rpn_cls: 0.03183  loss_rpn_loc: 0.036  time: 0.5826  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:33:50 d2.utils.events]: [39m eta: 2:04:56  iter: 2099  total_loss: 0.6908  loss_cls: 0.3851  loss_box_reg: 0.2756  loss_rpn_cls: 0.01665  loss_rpn_loc: 0.02737  time: 0.5826  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:34:02 d2.utils.events]: [39m eta: 2:04:45  iter: 2119  total_loss: 0.6515  loss_cls: 0.3541  loss_box_reg: 0.2695  loss_rpn_cls: 0.01535  loss_rpn_loc: 0.01984  time: 0.5826  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:34:14 d2.utils.events]: [39m eta: 2:04:35  iter: 2139  total_loss: 0.8433  loss_cls: 0.4464  loss_box_reg: 0.2985  loss_rpn_cls: 0.01408  loss_rpn_loc: 0.03351  time: 0.5826  data_time: 0.0126  lr: 0.001  max_mem: 6307M
[32m[03/25 07:34:25 d2.utils.events]: [39m eta: 2:04:23  iter: 2159  total_loss: 0.8453  loss_cls: 0.4624  loss_box_reg: 0.3018  loss_rpn_cls: 0.01765  loss_rpn_loc: 0.02248  time: 0.5826  data_time: 0.0126  lr: 0.001  max_mem: 6307M
[32m[03/25 07:34:37 d2.utils.events]: [39m eta: 2:04:10  iter: 2179  total_loss: 0.7537  loss_cls: 0.4404  loss_box_reg: 0.2618  loss_rpn_cls: 0.01689  loss_rpn_loc: 0.0199  time: 0.5826  data_time: 0.0128  lr: 0.001  max_mem: 6307M
[32m[03/25 07:34:49 d2.utils.events]: [39m eta: 2:03:59  iter: 2199  total_loss: 0.649  loss_cls: 0.3574  loss_box_reg: 0.2335  loss_rpn_cls: 0.01947  loss_rpn_loc: 0.02131  time: 0.5826  data_time: 0.0158  lr: 0.001  max_mem: 6307M
[32m[03/25 07:35:00 d2.utils.events]: [39m eta: 2:03:47  iter: 2219  total_loss: 0.6833  loss_cls: 0.3932  loss_box_reg: 0.2493  loss_rpn_cls: 0.02509  loss_rpn_loc: 0.02172  time: 0.5826  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 07:35:12 d2.utils.events]: [39m eta: 2:03:36  iter: 2239  total_loss: 0.7707  loss_cls: 0.4283  loss_box_reg: 0.2864  loss_rpn_cls: 0.02381  loss_rpn_loc: 0.02901  time: 0.5826  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 07:35:24 d2.utils.events]: [39m eta: 2:03:24  iter: 2259  total_loss: 0.7815  loss_cls: 0.4217  loss_box_reg: 0.3042  loss_rpn_cls: 0.02536  loss_rpn_loc: 0.02457  time: 0.5826  data_time: 0.0125  lr: 0.001  max_mem: 6307M
[32m[03/25 07:35:35 d2.utils.events]: [39m eta: 2:03:13  iter: 2279  total_loss: 0.7913  loss_cls: 0.4073  loss_box_reg: 0.2853  loss_rpn_cls: 0.02204  loss_rpn_loc: 0.02809  time: 0.5826  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:35:47 d2.utils.events]: [39m eta: 2:03:02  iter: 2299  total_loss: 0.8267  loss_cls: 0.4321  loss_box_reg: 0.2936  loss_rpn_cls: 0.02913  loss_rpn_loc: 0.02823  time: 0.5826  data_time: 0.0159  lr: 0.001  max_mem: 6307M
[32m[03/25 07:35:59 d2.utils.events]: [39m eta: 2:02:49  iter: 2319  total_loss: 0.7186  loss_cls: 0.3859  loss_box_reg: 0.2595  loss_rpn_cls: 0.02527  loss_rpn_loc: 0.02087  time: 0.5826  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:36:10 d2.utils.events]: [39m eta: 2:02:37  iter: 2339  total_loss: 0.7527  loss_cls: 0.3999  loss_box_reg: 0.3023  loss_rpn_cls: 0.01819  loss_rpn_loc: 0.02538  time: 0.5826  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:36:22 d2.utils.events]: [39m eta: 2:02:24  iter: 2359  total_loss: 0.7747  loss_cls: 0.4282  loss_box_reg: 0.2876  loss_rpn_cls: 0.01818  loss_rpn_loc: 0.02677  time: 0.5826  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:36:34 d2.utils.events]: [39m eta: 2:02:13  iter: 2379  total_loss: 0.7762  loss_cls: 0.4511  loss_box_reg: 0.2907  loss_rpn_cls: 0.02318  loss_rpn_loc: 0.02899  time: 0.5826  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:36:45 d2.utils.events]: [39m eta: 2:02:03  iter: 2399  total_loss: 0.7563  loss_cls: 0.422  loss_box_reg: 0.2882  loss_rpn_cls: 0.01971  loss_rpn_loc: 0.01998  time: 0.5826  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 07:36:57 d2.utils.events]: [39m eta: 2:01:52  iter: 2419  total_loss: 0.653  loss_cls: 0.385  loss_box_reg: 0.2142  loss_rpn_cls: 0.02604  loss_rpn_loc: 0.02851  time: 0.5826  data_time: 0.0150  lr: 0.001  max_mem: 6307M
[32m[03/25 07:37:09 d2.utils.events]: [39m eta: 2:01:40  iter: 2439  total_loss: 0.6682  loss_cls: 0.3302  loss_box_reg: 0.236  loss_rpn_cls: 0.01355  loss_rpn_loc: 0.01625  time: 0.5826  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:37:21 d2.utils.events]: [39m eta: 2:01:29  iter: 2459  total_loss: 0.859  loss_cls: 0.4517  loss_box_reg: 0.3257  loss_rpn_cls: 0.02759  loss_rpn_loc: 0.0384  time: 0.5827  data_time: 0.0138  lr: 0.001  max_mem: 6307M
[32m[03/25 07:37:32 d2.utils.events]: [39m eta: 2:01:18  iter: 2479  total_loss: 0.6513  loss_cls: 0.3403  loss_box_reg: 0.2091  loss_rpn_cls: 0.01506  loss_rpn_loc: 0.01647  time: 0.5827  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:37:44 d2.utils.events]: [39m eta: 2:01:06  iter: 2499  total_loss: 0.7314  loss_cls: 0.3866  loss_box_reg: 0.2792  loss_rpn_cls: 0.01897  loss_rpn_loc: 0.02841  time: 0.5827  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:37:56 d2.utils.events]: [39m eta: 2:00:53  iter: 2519  total_loss: 0.8052  loss_cls: 0.4318  loss_box_reg: 0.2724  loss_rpn_cls: 0.01736  loss_rpn_loc: 0.02596  time: 0.5827  data_time: 0.0129  lr: 0.001  max_mem: 6307M
[32m[03/25 07:38:07 d2.utils.events]: [39m eta: 2:00:41  iter: 2539  total_loss: 0.6151  loss_cls: 0.3448  loss_box_reg: 0.2274  loss_rpn_cls: 0.01641  loss_rpn_loc: 0.02154  time: 0.5827  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 07:38:19 d2.utils.events]: [39m eta: 2:00:29  iter: 2559  total_loss: 0.6928  loss_cls: 0.3712  loss_box_reg: 0.2425  loss_rpn_cls: 0.026  loss_rpn_loc: 0.03793  time: 0.5827  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:38:31 d2.utils.events]: [39m eta: 2:00:18  iter: 2579  total_loss: 0.714  loss_cls: 0.4039  loss_box_reg: 0.2509  loss_rpn_cls: 0.02199  loss_rpn_loc: 0.02901  time: 0.5827  data_time: 0.0128  lr: 0.001  max_mem: 6307M
[32m[03/25 07:38:42 d2.utils.events]: [39m eta: 2:00:07  iter: 2599  total_loss: 0.5968  loss_cls: 0.3208  loss_box_reg: 0.2255  loss_rpn_cls: 0.02066  loss_rpn_loc: 0.02639  time: 0.5827  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:38:54 d2.utils.events]: [39m eta: 1:59:55  iter: 2619  total_loss: 0.6012  loss_cls: 0.3284  loss_box_reg: 0.2435  loss_rpn_cls: 0.01483  loss_rpn_loc: 0.01882  time: 0.5827  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:39:06 d2.utils.events]: [39m eta: 1:59:43  iter: 2639  total_loss: 0.7229  loss_cls: 0.4249  loss_box_reg: 0.2552  loss_rpn_cls: 0.01701  loss_rpn_loc: 0.0171  time: 0.5827  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:39:17 d2.utils.events]: [39m eta: 1:59:31  iter: 2659  total_loss: 0.7829  loss_cls: 0.3866  loss_box_reg: 0.3117  loss_rpn_cls: 0.0205  loss_rpn_loc: 0.029  time: 0.5827  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 07:39:29 d2.utils.events]: [39m eta: 1:59:20  iter: 2679  total_loss: 0.6841  loss_cls: 0.3661  loss_box_reg: 0.271  loss_rpn_cls: 0.02434  loss_rpn_loc: 0.02006  time: 0.5827  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 07:39:41 d2.utils.events]: [39m eta: 1:59:07  iter: 2699  total_loss: 0.7202  loss_cls: 0.3909  loss_box_reg: 0.2437  loss_rpn_cls: 0.02324  loss_rpn_loc: 0.03243  time: 0.5827  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:39:52 d2.utils.events]: [39m eta: 1:58:55  iter: 2719  total_loss: 0.6515  loss_cls: 0.3694  loss_box_reg: 0.2612  loss_rpn_cls: 0.01284  loss_rpn_loc: 0.01436  time: 0.5827  data_time: 0.0146  lr: 0.001  max_mem: 6307M
[32m[03/25 07:40:04 d2.utils.events]: [39m eta: 1:58:44  iter: 2739  total_loss: 0.7006  loss_cls: 0.374  loss_box_reg: 0.2844  loss_rpn_cls: 0.01938  loss_rpn_loc: 0.02427  time: 0.5828  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:40:16 d2.utils.events]: [39m eta: 1:58:32  iter: 2759  total_loss: 0.6845  loss_cls: 0.3901  loss_box_reg: 0.2716  loss_rpn_cls: 0.02027  loss_rpn_loc: 0.02131  time: 0.5828  data_time: 0.0129  lr: 0.001  max_mem: 6307M
[32m[03/25 07:40:27 d2.utils.events]: [39m eta: 1:58:20  iter: 2779  total_loss: 0.7638  loss_cls: 0.4613  loss_box_reg: 0.2721  loss_rpn_cls: 0.01701  loss_rpn_loc: 0.02222  time: 0.5827  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:40:39 d2.utils.events]: [39m eta: 1:58:09  iter: 2799  total_loss: 0.6783  loss_cls: 0.326  loss_box_reg: 0.2355  loss_rpn_cls: 0.0176  loss_rpn_loc: 0.02183  time: 0.5827  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 07:40:51 d2.utils.events]: [39m eta: 1:57:58  iter: 2819  total_loss: 0.7416  loss_cls: 0.4162  loss_box_reg: 0.2608  loss_rpn_cls: 0.0248  loss_rpn_loc: 0.02497  time: 0.5827  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 07:41:02 d2.utils.events]: [39m eta: 1:57:45  iter: 2839  total_loss: 0.7421  loss_cls: 0.3958  loss_box_reg: 0.2767  loss_rpn_cls: 0.0146  loss_rpn_loc: 0.01884  time: 0.5827  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:41:14 d2.utils.events]: [39m eta: 1:57:33  iter: 2859  total_loss: 0.7026  loss_cls: 0.3935  loss_box_reg: 0.2482  loss_rpn_cls: 0.01874  loss_rpn_loc: 0.02261  time: 0.5827  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 07:41:26 d2.utils.events]: [39m eta: 1:57:22  iter: 2879  total_loss: 0.6646  loss_cls: 0.3981  loss_box_reg: 0.2262  loss_rpn_cls: 0.02205  loss_rpn_loc: 0.0224  time: 0.5827  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 07:41:37 d2.utils.events]: [39m eta: 1:57:11  iter: 2899  total_loss: 0.7618  loss_cls: 0.4187  loss_box_reg: 0.2952  loss_rpn_cls: 0.01817  loss_rpn_loc: 0.02973  time: 0.5827  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 07:41:49 d2.utils.events]: [39m eta: 1:57:00  iter: 2919  total_loss: 0.7867  loss_cls: 0.3706  loss_box_reg: 0.2839  loss_rpn_cls: 0.02281  loss_rpn_loc: 0.03217  time: 0.5827  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:42:01 d2.utils.events]: [39m eta: 1:56:48  iter: 2939  total_loss: 0.6579  loss_cls: 0.373  loss_box_reg: 0.2116  loss_rpn_cls: 0.01863  loss_rpn_loc: 0.01832  time: 0.5827  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 07:42:12 d2.utils.events]: [39m eta: 1:56:37  iter: 2959  total_loss: 0.8398  loss_cls: 0.4334  loss_box_reg: 0.3016  loss_rpn_cls: 0.01584  loss_rpn_loc: 0.02592  time: 0.5827  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:42:24 d2.utils.events]: [39m eta: 1:56:25  iter: 2979  total_loss: 0.6705  loss_cls: 0.3595  loss_box_reg: 0.2481  loss_rpn_cls: 0.02109  loss_rpn_loc: 0.0228  time: 0.5827  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:42:37 d2.data.datasets.coco]: [39mLoaded 4883 images in COCO format from ../../dataset/train.json
[32m[03/25 07:42:38 d2.data.dataset_mapper]: [39m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[03/25 07:42:38 d2.data.common]: [39mSerializing 4883 elements to byte tensors and concatenating them all ...
[32m[03/25 07:42:38 d2.data.common]: [39mSerialized dataset takes 2.19 MiB
[31m[5mWARNING[39m[25m [32m[03/25 07:42:38 d2.evaluation.coco_evaluation]: [39mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[03/25 07:42:38 d2.evaluation.evaluator]: [39mStart inference on 4883 batches
[32m[03/25 07:42:39 d2.evaluation.evaluator]: [39mInference done 11/4883. Dataloading: 0.0010 s/iter. Inference: 0.0461 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:03:50
[32m[03/25 07:42:44 d2.evaluation.evaluator]: [39mInference done 117/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0474 s/iter. ETA=0:03:45
[32m[03/25 07:42:49 d2.evaluation.evaluator]: [39mInference done 224/4883. Dataloading: 0.0012 s/iter. Inference: 0.0457 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:03:40
[32m[03/25 07:42:54 d2.evaluation.evaluator]: [39mInference done 331/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:03:34
[32m[03/25 07:42:59 d2.evaluation.evaluator]: [39mInference done 438/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:03:29
[32m[03/25 07:43:04 d2.evaluation.evaluator]: [39mInference done 545/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:03:24
[32m[03/25 07:43:09 d2.evaluation.evaluator]: [39mInference done 650/4883. Dataloading: 0.0012 s/iter. Inference: 0.0457 s/iter. Eval: 0.0003 s/iter. Total: 0.0472 s/iter. ETA=0:03:19
[32m[03/25 07:43:14 d2.evaluation.evaluator]: [39mInference done 756/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:03:15
[32m[03/25 07:43:19 d2.evaluation.evaluator]: [39mInference done 860/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0474 s/iter. ETA=0:03:10
[32m[03/25 07:43:24 d2.evaluation.evaluator]: [39mInference done 967/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0474 s/iter. ETA=0:03:05
[32m[03/25 07:43:29 d2.evaluation.evaluator]: [39mInference done 1074/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:03:00
[32m[03/25 07:43:34 d2.evaluation.evaluator]: [39mInference done 1180/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:55
[32m[03/25 07:43:39 d2.evaluation.evaluator]: [39mInference done 1286/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:50
[32m[03/25 07:43:44 d2.evaluation.evaluator]: [39mInference done 1392/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:45
[32m[03/25 07:43:49 d2.evaluation.evaluator]: [39mInference done 1498/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0474 s/iter. ETA=0:02:40
[32m[03/25 07:43:54 d2.evaluation.evaluator]: [39mInference done 1605/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:35
[32m[03/25 07:43:59 d2.evaluation.evaluator]: [39mInference done 1712/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:29
[32m[03/25 07:44:04 d2.evaluation.evaluator]: [39mInference done 1818/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:24
[32m[03/25 07:44:09 d2.evaluation.evaluator]: [39mInference done 1925/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:19
[32m[03/25 07:44:14 d2.evaluation.evaluator]: [39mInference done 2033/4883. Dataloading: 0.0012 s/iter. Inference: 0.0457 s/iter. Eval: 0.0003 s/iter. Total: 0.0472 s/iter. ETA=0:02:14
[32m[03/25 07:44:19 d2.evaluation.evaluator]: [39mInference done 2137/4883. Dataloading: 0.0012 s/iter. Inference: 0.0458 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:09
[32m[03/25 07:44:24 d2.evaluation.evaluator]: [39mInference done 2244/4883. Dataloading: 0.0012 s/iter. Inference: 0.0457 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:04
[32m[03/25 07:44:29 d2.evaluation.evaluator]: [39mInference done 2351/4883. Dataloading: 0.0012 s/iter. Inference: 0.0457 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:01:59
[32m[03/25 07:44:34 d2.evaluation.evaluator]: [39mInference done 2459/4883. Dataloading: 0.0012 s/iter. Inference: 0.0457 s/iter. Eval: 0.0003 s/iter. Total: 0.0472 s/iter. ETA=0:01:54
[32m[03/25 07:44:39 d2.evaluation.evaluator]: [39mInference done 2568/4883. Dataloading: 0.0012 s/iter. Inference: 0.0457 s/iter. Eval: 0.0003 s/iter. Total: 0.0472 s/iter. ETA=0:01:49
[32m[03/25 07:44:44 d2.evaluation.evaluator]: [39mInference done 2676/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:01:44
[32m[03/25 07:44:49 d2.evaluation.evaluator]: [39mInference done 2784/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:01:38
[32m[03/25 07:44:54 d2.evaluation.evaluator]: [39mInference done 2892/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:01:33
[32m[03/25 07:44:59 d2.evaluation.evaluator]: [39mInference done 2998/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:01:28
[32m[03/25 07:45:04 d2.evaluation.evaluator]: [39mInference done 3104/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:01:23
[32m[03/25 07:45:09 d2.evaluation.evaluator]: [39mInference done 3211/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:01:18
[32m[03/25 07:45:14 d2.evaluation.evaluator]: [39mInference done 3319/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:01:13
[32m[03/25 07:45:19 d2.evaluation.evaluator]: [39mInference done 3426/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:01:08
[32m[03/25 07:45:24 d2.evaluation.evaluator]: [39mInference done 3535/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0470 s/iter. ETA=0:01:03
[32m[03/25 07:45:29 d2.evaluation.evaluator]: [39mInference done 3641/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:00:58
[32m[03/25 07:45:34 d2.evaluation.evaluator]: [39mInference done 3749/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0470 s/iter. ETA=0:00:53
[32m[03/25 07:45:39 d2.evaluation.evaluator]: [39mInference done 3857/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0470 s/iter. ETA=0:00:48
[32m[03/25 07:45:44 d2.evaluation.evaluator]: [39mInference done 3963/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0470 s/iter. ETA=0:00:43
[32m[03/25 07:45:49 d2.evaluation.evaluator]: [39mInference done 4069/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:00:38
[32m[03/25 07:45:55 d2.evaluation.evaluator]: [39mInference done 4175/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:00:33
[32m[03/25 07:46:00 d2.evaluation.evaluator]: [39mInference done 4281/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:00:28
[32m[03/25 07:46:05 d2.evaluation.evaluator]: [39mInference done 4388/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:00:23
[32m[03/25 07:46:10 d2.evaluation.evaluator]: [39mInference done 4495/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:00:18
[32m[03/25 07:46:15 d2.evaluation.evaluator]: [39mInference done 4601/4883. Dataloading: 0.0012 s/iter. Inference: 0.0456 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:00:13
[32m[03/25 07:46:20 d2.evaluation.evaluator]: [39mInference done 4710/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:00:08
[32m[03/25 07:46:25 d2.evaluation.evaluator]: [39mInference done 4817/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0471 s/iter. ETA=0:00:03
[32m[03/25 07:46:28 d2.evaluation.evaluator]: [39mTotal inference time: 0:03:49.559418 (0.047060 s / iter per device, on 1 devices)
[32m[03/25 07:46:28 d2.evaluation.evaluator]: [39mTotal inference pure compute time: 0:03:42 (0.045529 s / iter per device, on 1 devices)
[32m[03/25 07:46:29 d2.evaluation.coco_evaluation]: [39mPreparing results for COCO format ...
[32m[03/25 07:46:29 d2.evaluation.coco_evaluation]: [39mSaving results to ./output_eval/coco_instances_results.json
[32m[03/25 07:46:30 d2.evaluation.coco_evaluation]: [39mEvaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.63s)
creating index...
index created!
[32m[03/25 07:46:30 d2.evaluation.fast_eval_api]: [39mEvaluate annotation type *bbox*
[32m[03/25 07:46:33 d2.evaluation.fast_eval_api]: [39mCOCOeval_opt.evaluate() finished in 2.77 seconds.
[32m[03/25 07:46:33 d2.evaluation.fast_eval_api]: [39mAccumulating evaluation results...
[32m[03/25 07:46:34 d2.evaluation.fast_eval_api]: [39mCOCOeval_opt.accumulate() finished in 0.72 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.307
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.435
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.333
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.007
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.052
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.365
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.260
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.530
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.029
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.220
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.605
[32m[03/25 07:46:34 d2.evaluation.coco_evaluation]: [39mEvaluation results for bbox:
|   AP   |  AP50  |  AP75  |  APs  |  APm  |  APl   |
|:------:|:------:|:------:|:-----:|:-----:|:------:|
| 30.738 | 43.538 | 33.336 | 0.730 | 5.177 | 36.513 |
[32m[03/25 07:46:34 d2.evaluation.coco_evaluation]: [39mPer-category bbox AP:
| category      | AP     | category    | AP     | category   | AP     |
|:--------------|:-------|:------------|:-------|:-----------|:-------|
| General trash | 17.518 | Paper       | 23.406 | Paper pack | 27.193 |
| Metal         | 29.262 | Glass       | 32.426 | Plastic    | 22.410 |
| Styrofoam     | 22.749 | Plastic bag | 47.806 | Battery    | 52.276 |
| Clothing      | 32.334 |             |        |            |        |
[32m[03/25 07:46:34 d2.engine.defaults]: [39mEvaluation results for coco_trash_train in csv format:
[32m[03/25 07:46:34 d2.evaluation.testing]: [39mcopypaste: Task: bbox
[32m[03/25 07:46:34 d2.evaluation.testing]: [39mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[03/25 07:46:34 d2.evaluation.testing]: [39mcopypaste: 30.7380,43.5376,33.3358,0.7296,5.1767,36.5132
[32m[03/25 07:46:34 d2.utils.events]: [39m eta: 1:56:13  iter: 2999  total_loss: 0.6773  loss_cls: 0.3843  loss_box_reg: 0.2113  loss_rpn_cls: 0.01568  loss_rpn_loc: 0.01739  time: 0.5827  data_time: 0.0125  lr: 0.001  max_mem: 6307M
[32m[03/25 07:46:46 d2.utils.events]: [39m eta: 1:56:00  iter: 3019  total_loss: 0.7228  loss_cls: 0.3674  loss_box_reg: 0.2669  loss_rpn_cls: 0.02166  loss_rpn_loc: 0.01685  time: 0.5826  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:46:58 d2.utils.events]: [39m eta: 1:55:49  iter: 3039  total_loss: 0.8037  loss_cls: 0.4107  loss_box_reg: 0.3011  loss_rpn_cls: 0.02085  loss_rpn_loc: 0.03516  time: 0.5826  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:47:09 d2.utils.events]: [39m eta: 1:55:38  iter: 3059  total_loss: 0.7697  loss_cls: 0.392  loss_box_reg: 0.2841  loss_rpn_cls: 0.01869  loss_rpn_loc: 0.04421  time: 0.5826  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:47:21 d2.utils.events]: [39m eta: 1:55:26  iter: 3079  total_loss: 0.7459  loss_cls: 0.4055  loss_box_reg: 0.287  loss_rpn_cls: 0.01945  loss_rpn_loc: 0.02492  time: 0.5826  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 07:47:33 d2.utils.events]: [39m eta: 1:55:15  iter: 3099  total_loss: 0.7562  loss_cls: 0.4272  loss_box_reg: 0.262  loss_rpn_cls: 0.01803  loss_rpn_loc: 0.02472  time: 0.5826  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:47:44 d2.utils.events]: [39m eta: 1:55:03  iter: 3119  total_loss: 0.6807  loss_cls: 0.3749  loss_box_reg: 0.2674  loss_rpn_cls: 0.01203  loss_rpn_loc: 0.02039  time: 0.5827  data_time: 0.0157  lr: 0.001  max_mem: 6307M
[32m[03/25 07:47:56 d2.utils.events]: [39m eta: 1:54:51  iter: 3139  total_loss: 0.7082  loss_cls: 0.4083  loss_box_reg: 0.2535  loss_rpn_cls: 0.02044  loss_rpn_loc: 0.02065  time: 0.5826  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:48:07 d2.utils.events]: [39m eta: 1:54:39  iter: 3159  total_loss: 0.6405  loss_cls: 0.3879  loss_box_reg: 0.2441  loss_rpn_cls: 0.01429  loss_rpn_loc: 0.01591  time: 0.5826  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 07:48:19 d2.utils.events]: [39m eta: 1:54:27  iter: 3179  total_loss: 0.6557  loss_cls: 0.367  loss_box_reg: 0.2685  loss_rpn_cls: 0.02005  loss_rpn_loc: 0.02053  time: 0.5826  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:48:31 d2.utils.events]: [39m eta: 1:54:16  iter: 3199  total_loss: 0.6762  loss_cls: 0.34  loss_box_reg: 0.2479  loss_rpn_cls: 0.01931  loss_rpn_loc: 0.02469  time: 0.5826  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:48:42 d2.utils.events]: [39m eta: 1:54:05  iter: 3219  total_loss: 0.7016  loss_cls: 0.3597  loss_box_reg: 0.256  loss_rpn_cls: 0.01778  loss_rpn_loc: 0.02109  time: 0.5826  data_time: 0.0155  lr: 0.001  max_mem: 6307M
[32m[03/25 07:48:54 d2.utils.events]: [39m eta: 1:53:53  iter: 3239  total_loss: 0.6844  loss_cls: 0.3672  loss_box_reg: 0.2853  loss_rpn_cls: 0.01483  loss_rpn_loc: 0.02724  time: 0.5826  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:49:06 d2.utils.events]: [39m eta: 1:53:42  iter: 3259  total_loss: 0.8005  loss_cls: 0.4503  loss_box_reg: 0.305  loss_rpn_cls: 0.02587  loss_rpn_loc: 0.03034  time: 0.5827  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:49:18 d2.utils.events]: [39m eta: 1:53:31  iter: 3279  total_loss: 0.7488  loss_cls: 0.3596  loss_box_reg: 0.2945  loss_rpn_cls: 0.01896  loss_rpn_loc: 0.02995  time: 0.5826  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 07:49:29 d2.utils.events]: [39m eta: 1:53:19  iter: 3299  total_loss: 0.8279  loss_cls: 0.3961  loss_box_reg: 0.3292  loss_rpn_cls: 0.01814  loss_rpn_loc: 0.02276  time: 0.5827  data_time: 0.0149  lr: 0.001  max_mem: 6307M
[32m[03/25 07:49:41 d2.utils.events]: [39m eta: 1:53:08  iter: 3319  total_loss: 0.7871  loss_cls: 0.3909  loss_box_reg: 0.2961  loss_rpn_cls: 0.02331  loss_rpn_loc: 0.02147  time: 0.5827  data_time: 0.0144  lr: 0.001  max_mem: 6307M
[32m[03/25 07:49:53 d2.utils.events]: [39m eta: 1:52:57  iter: 3339  total_loss: 0.7433  loss_cls: 0.4068  loss_box_reg: 0.2447  loss_rpn_cls: 0.01969  loss_rpn_loc: 0.03683  time: 0.5827  data_time: 0.0141  lr: 0.001  max_mem: 6307M
[32m[03/25 07:50:05 d2.utils.events]: [39m eta: 1:52:46  iter: 3359  total_loss: 0.6989  loss_cls: 0.315  loss_box_reg: 0.2355  loss_rpn_cls: 0.02062  loss_rpn_loc: 0.02111  time: 0.5827  data_time: 0.0157  lr: 0.001  max_mem: 6307M
[32m[03/25 07:50:16 d2.utils.events]: [39m eta: 1:52:35  iter: 3379  total_loss: 0.7566  loss_cls: 0.4026  loss_box_reg: 0.2797  loss_rpn_cls: 0.03066  loss_rpn_loc: 0.03312  time: 0.5827  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:50:28 d2.utils.events]: [39m eta: 1:52:23  iter: 3399  total_loss: 0.7886  loss_cls: 0.3932  loss_box_reg: 0.2911  loss_rpn_cls: 0.02072  loss_rpn_loc: 0.02391  time: 0.5827  data_time: 0.0128  lr: 0.001  max_mem: 6307M
[32m[03/25 07:50:40 d2.utils.events]: [39m eta: 1:52:12  iter: 3419  total_loss: 0.7417  loss_cls: 0.3714  loss_box_reg: 0.2566  loss_rpn_cls: 0.0203  loss_rpn_loc: 0.02035  time: 0.5827  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:50:51 d2.utils.events]: [39m eta: 1:52:00  iter: 3439  total_loss: 0.6761  loss_cls: 0.3945  loss_box_reg: 0.2557  loss_rpn_cls: 0.01749  loss_rpn_loc: 0.02835  time: 0.5827  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:51:03 d2.utils.events]: [39m eta: 1:51:48  iter: 3459  total_loss: 0.5741  loss_cls: 0.2859  loss_box_reg: 0.2124  loss_rpn_cls: 0.01536  loss_rpn_loc: 0.02152  time: 0.5828  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:51:15 d2.utils.events]: [39m eta: 1:51:36  iter: 3479  total_loss: 0.7206  loss_cls: 0.3685  loss_box_reg: 0.2847  loss_rpn_cls: 0.01723  loss_rpn_loc: 0.02334  time: 0.5828  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:51:26 d2.utils.events]: [39m eta: 1:51:24  iter: 3499  total_loss: 0.7098  loss_cls: 0.4254  loss_box_reg: 0.2776  loss_rpn_cls: 0.02237  loss_rpn_loc: 0.03678  time: 0.5828  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:51:38 d2.utils.events]: [39m eta: 1:51:14  iter: 3519  total_loss: 0.7129  loss_cls: 0.3753  loss_box_reg: 0.2641  loss_rpn_cls: 0.02296  loss_rpn_loc: 0.02311  time: 0.5828  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:51:50 d2.utils.events]: [39m eta: 1:51:03  iter: 3539  total_loss: 0.6366  loss_cls: 0.3448  loss_box_reg: 0.2068  loss_rpn_cls: 0.01988  loss_rpn_loc: 0.02186  time: 0.5828  data_time: 0.0139  lr: 0.001  max_mem: 6307M
[32m[03/25 07:52:01 d2.utils.events]: [39m eta: 1:50:51  iter: 3559  total_loss: 0.6968  loss_cls: 0.3883  loss_box_reg: 0.2237  loss_rpn_cls: 0.01221  loss_rpn_loc: 0.03096  time: 0.5828  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 07:52:13 d2.utils.events]: [39m eta: 1:50:40  iter: 3579  total_loss: 0.671  loss_cls: 0.3375  loss_box_reg: 0.2791  loss_rpn_cls: 0.0178  loss_rpn_loc: 0.02002  time: 0.5828  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:52:25 d2.utils.events]: [39m eta: 1:50:28  iter: 3599  total_loss: 0.7593  loss_cls: 0.4246  loss_box_reg: 0.2681  loss_rpn_cls: 0.01991  loss_rpn_loc: 0.01861  time: 0.5829  data_time: 0.0139  lr: 0.001  max_mem: 6307M
[32m[03/25 07:52:37 d2.utils.events]: [39m eta: 1:50:17  iter: 3619  total_loss: 0.7053  loss_cls: 0.3668  loss_box_reg: 0.2404  loss_rpn_cls: 0.01541  loss_rpn_loc: 0.02048  time: 0.5829  data_time: 0.0139  lr: 0.001  max_mem: 6307M
[32m[03/25 07:52:48 d2.utils.events]: [39m eta: 1:50:04  iter: 3639  total_loss: 0.7793  loss_cls: 0.415  loss_box_reg: 0.2823  loss_rpn_cls: 0.01549  loss_rpn_loc: 0.01678  time: 0.5828  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:53:00 d2.utils.events]: [39m eta: 1:49:52  iter: 3659  total_loss: 0.6018  loss_cls: 0.3051  loss_box_reg: 0.2057  loss_rpn_cls: 0.01048  loss_rpn_loc: 0.01311  time: 0.5828  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:53:12 d2.utils.events]: [39m eta: 1:49:41  iter: 3679  total_loss: 0.6243  loss_cls: 0.3566  loss_box_reg: 0.2444  loss_rpn_cls: 0.01173  loss_rpn_loc: 0.01865  time: 0.5828  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:53:23 d2.utils.events]: [39m eta: 1:49:30  iter: 3699  total_loss: 0.6345  loss_cls: 0.3284  loss_box_reg: 0.2125  loss_rpn_cls: 0.01778  loss_rpn_loc: 0.02268  time: 0.5828  data_time: 0.0140  lr: 0.001  max_mem: 6307M
[32m[03/25 07:53:35 d2.utils.events]: [39m eta: 1:49:19  iter: 3719  total_loss: 0.8069  loss_cls: 0.4016  loss_box_reg: 0.31  loss_rpn_cls: 0.02163  loss_rpn_loc: 0.05188  time: 0.5829  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 07:53:47 d2.utils.events]: [39m eta: 1:49:07  iter: 3739  total_loss: 0.7196  loss_cls: 0.3837  loss_box_reg: 0.2536  loss_rpn_cls: 0.0165  loss_rpn_loc: 0.0206  time: 0.5829  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:53:58 d2.utils.events]: [39m eta: 1:48:56  iter: 3759  total_loss: 0.6301  loss_cls: 0.3229  loss_box_reg: 0.2603  loss_rpn_cls: 0.01063  loss_rpn_loc: 0.01416  time: 0.5829  data_time: 0.0146  lr: 0.001  max_mem: 6307M
[32m[03/25 07:54:10 d2.utils.events]: [39m eta: 1:48:45  iter: 3779  total_loss: 0.7191  loss_cls: 0.3891  loss_box_reg: 0.2928  loss_rpn_cls: 0.01825  loss_rpn_loc: 0.02982  time: 0.5829  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 07:54:22 d2.utils.events]: [39m eta: 1:48:34  iter: 3799  total_loss: 0.675  loss_cls: 0.3604  loss_box_reg: 0.2668  loss_rpn_cls: 0.0105  loss_rpn_loc: 0.01287  time: 0.5829  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 07:54:34 d2.utils.events]: [39m eta: 1:48:23  iter: 3819  total_loss: 0.5567  loss_cls: 0.3386  loss_box_reg: 0.2392  loss_rpn_cls: 0.01224  loss_rpn_loc: 0.01349  time: 0.5829  data_time: 0.0143  lr: 0.001  max_mem: 6307M
[32m[03/25 07:54:45 d2.utils.events]: [39m eta: 1:48:13  iter: 3839  total_loss: 0.5695  loss_cls: 0.3374  loss_box_reg: 0.2389  loss_rpn_cls: 0.01544  loss_rpn_loc: 0.02428  time: 0.5829  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 07:54:57 d2.utils.events]: [39m eta: 1:48:03  iter: 3859  total_loss: 0.6052  loss_cls: 0.3281  loss_box_reg: 0.2247  loss_rpn_cls: 0.0157  loss_rpn_loc: 0.01504  time: 0.5829  data_time: 0.0147  lr: 0.001  max_mem: 6307M
[32m[03/25 07:55:09 d2.utils.events]: [39m eta: 1:47:52  iter: 3879  total_loss: 0.6216  loss_cls: 0.38  loss_box_reg: 0.2058  loss_rpn_cls: 0.01271  loss_rpn_loc: 0.01641  time: 0.5830  data_time: 0.0150  lr: 0.001  max_mem: 6307M
[32m[03/25 07:55:20 d2.utils.events]: [39m eta: 1:47:39  iter: 3899  total_loss: 0.6697  loss_cls: 0.3636  loss_box_reg: 0.278  loss_rpn_cls: 0.01265  loss_rpn_loc: 0.01344  time: 0.5830  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 07:55:32 d2.utils.events]: [39m eta: 1:47:28  iter: 3919  total_loss: 0.7261  loss_cls: 0.4051  loss_box_reg: 0.2806  loss_rpn_cls: 0.0172  loss_rpn_loc: 0.02353  time: 0.5829  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 07:55:44 d2.utils.events]: [39m eta: 1:47:16  iter: 3939  total_loss: 0.6649  loss_cls: 0.39  loss_box_reg: 0.2482  loss_rpn_cls: 0.01689  loss_rpn_loc: 0.02331  time: 0.5829  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:55:56 d2.utils.events]: [39m eta: 1:47:06  iter: 3959  total_loss: 0.7157  loss_cls: 0.3657  loss_box_reg: 0.2809  loss_rpn_cls: 0.02039  loss_rpn_loc: 0.02627  time: 0.5830  data_time: 0.0169  lr: 0.001  max_mem: 6307M
[32m[03/25 07:56:07 d2.utils.events]: [39m eta: 1:46:53  iter: 3979  total_loss: 0.6439  loss_cls: 0.3457  loss_box_reg: 0.2412  loss_rpn_cls: 0.01715  loss_rpn_loc: 0.02349  time: 0.5830  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 07:56:19 d2.utils.events]: [39m eta: 1:46:42  iter: 3999  total_loss: 0.7391  loss_cls: 0.4099  loss_box_reg: 0.2972  loss_rpn_cls: 0.02107  loss_rpn_loc: 0.02532  time: 0.5830  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 07:56:31 d2.utils.events]: [39m eta: 1:46:31  iter: 4019  total_loss: 0.5947  loss_cls: 0.3107  loss_box_reg: 0.2405  loss_rpn_cls: 0.01914  loss_rpn_loc: 0.0238  time: 0.5830  data_time: 0.0148  lr: 0.001  max_mem: 6307M
[32m[03/25 07:56:42 d2.utils.events]: [39m eta: 1:46:19  iter: 4039  total_loss: 0.6494  loss_cls: 0.3332  loss_box_reg: 0.231  loss_rpn_cls: 0.01543  loss_rpn_loc: 0.02658  time: 0.5830  data_time: 0.0141  lr: 0.001  max_mem: 6307M
[32m[03/25 07:56:54 d2.utils.events]: [39m eta: 1:46:08  iter: 4059  total_loss: 0.7485  loss_cls: 0.383  loss_box_reg: 0.3081  loss_rpn_cls: 0.01617  loss_rpn_loc: 0.02064  time: 0.5830  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:57:06 d2.utils.events]: [39m eta: 1:45:56  iter: 4079  total_loss: 0.6233  loss_cls: 0.3915  loss_box_reg: 0.2126  loss_rpn_cls: 0.01402  loss_rpn_loc: 0.0271  time: 0.5829  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:57:17 d2.utils.events]: [39m eta: 1:45:44  iter: 4099  total_loss: 0.5731  loss_cls: 0.3335  loss_box_reg: 0.2119  loss_rpn_cls: 0.01595  loss_rpn_loc: 0.01722  time: 0.5829  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:57:29 d2.utils.events]: [39m eta: 1:45:31  iter: 4119  total_loss: 0.606  loss_cls: 0.3301  loss_box_reg: 0.2548  loss_rpn_cls: 0.01473  loss_rpn_loc: 0.01479  time: 0.5829  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 07:57:40 d2.utils.events]: [39m eta: 1:45:20  iter: 4139  total_loss: 0.8041  loss_cls: 0.3892  loss_box_reg: 0.3064  loss_rpn_cls: 0.02315  loss_rpn_loc: 0.03096  time: 0.5829  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 07:57:52 d2.utils.events]: [39m eta: 1:45:09  iter: 4159  total_loss: 0.6087  loss_cls: 0.3488  loss_box_reg: 0.2412  loss_rpn_cls: 0.0109  loss_rpn_loc: 0.01885  time: 0.5829  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 07:58:04 d2.utils.events]: [39m eta: 1:44:58  iter: 4179  total_loss: 0.6587  loss_cls: 0.3025  loss_box_reg: 0.2477  loss_rpn_cls: 0.0144  loss_rpn_loc: 0.02105  time: 0.5829  data_time: 0.0141  lr: 0.001  max_mem: 6307M
[32m[03/25 07:58:15 d2.utils.events]: [39m eta: 1:44:47  iter: 4199  total_loss: 0.7281  loss_cls: 0.3776  loss_box_reg: 0.2652  loss_rpn_cls: 0.01835  loss_rpn_loc: 0.02612  time: 0.5829  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 07:58:27 d2.utils.events]: [39m eta: 1:44:34  iter: 4219  total_loss: 0.6162  loss_cls: 0.3592  loss_box_reg: 0.2353  loss_rpn_cls: 0.01488  loss_rpn_loc: 0.02175  time: 0.5829  data_time: 0.0129  lr: 0.001  max_mem: 6307M
[32m[03/25 07:58:39 d2.utils.events]: [39m eta: 1:44:22  iter: 4239  total_loss: 0.6626  loss_cls: 0.3281  loss_box_reg: 0.26  loss_rpn_cls: 0.01683  loss_rpn_loc: 0.03  time: 0.5829  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:58:50 d2.utils.events]: [39m eta: 1:44:10  iter: 4259  total_loss: 0.7252  loss_cls: 0.3718  loss_box_reg: 0.2659  loss_rpn_cls: 0.01572  loss_rpn_loc: 0.03081  time: 0.5829  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 07:59:02 d2.utils.events]: [39m eta: 1:43:58  iter: 4279  total_loss: 0.7057  loss_cls: 0.3523  loss_box_reg: 0.2673  loss_rpn_cls: 0.02686  loss_rpn_loc: 0.04474  time: 0.5829  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 07:59:14 d2.utils.events]: [39m eta: 1:43:46  iter: 4299  total_loss: 0.6385  loss_cls: 0.3187  loss_box_reg: 0.2333  loss_rpn_cls: 0.01221  loss_rpn_loc: 0.02062  time: 0.5829  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:59:25 d2.utils.events]: [39m eta: 1:43:34  iter: 4319  total_loss: 0.6258  loss_cls: 0.382  loss_box_reg: 0.2614  loss_rpn_cls: 0.0183  loss_rpn_loc: 0.02426  time: 0.5829  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 07:59:37 d2.utils.events]: [39m eta: 1:43:21  iter: 4339  total_loss: 0.7146  loss_cls: 0.3814  loss_box_reg: 0.2869  loss_rpn_cls: 0.02194  loss_rpn_loc: 0.0241  time: 0.5829  data_time: 0.0128  lr: 0.001  max_mem: 6307M
[32m[03/25 07:59:48 d2.utils.events]: [39m eta: 1:43:09  iter: 4359  total_loss: 0.66  loss_cls: 0.3083  loss_box_reg: 0.2644  loss_rpn_cls: 0.01818  loss_rpn_loc: 0.02377  time: 0.5828  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 08:00:00 d2.utils.events]: [39m eta: 1:42:57  iter: 4379  total_loss: 0.6726  loss_cls: 0.3372  loss_box_reg: 0.2482  loss_rpn_cls: 0.009425  loss_rpn_loc: 0.01711  time: 0.5828  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:00:12 d2.utils.events]: [39m eta: 1:42:46  iter: 4399  total_loss: 0.6875  loss_cls: 0.3659  loss_box_reg: 0.2635  loss_rpn_cls: 0.02316  loss_rpn_loc: 0.04622  time: 0.5828  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:00:24 d2.utils.events]: [39m eta: 1:42:34  iter: 4419  total_loss: 0.7664  loss_cls: 0.3542  loss_box_reg: 0.311  loss_rpn_cls: 0.01654  loss_rpn_loc: 0.02892  time: 0.5829  data_time: 0.0150  lr: 0.001  max_mem: 6307M
[32m[03/25 08:00:35 d2.utils.events]: [39m eta: 1:42:23  iter: 4439  total_loss: 0.739  loss_cls: 0.3283  loss_box_reg: 0.2584  loss_rpn_cls: 0.01961  loss_rpn_loc: 0.03312  time: 0.5829  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:00:47 d2.utils.events]: [39m eta: 1:42:11  iter: 4459  total_loss: 0.7102  loss_cls: 0.3855  loss_box_reg: 0.2939  loss_rpn_cls: 0.01829  loss_rpn_loc: 0.03192  time: 0.5829  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:00:59 d2.utils.events]: [39m eta: 1:41:59  iter: 4479  total_loss: 0.7712  loss_cls: 0.4178  loss_box_reg: 0.2759  loss_rpn_cls: 0.02022  loss_rpn_loc: 0.02323  time: 0.5829  data_time: 0.0138  lr: 0.001  max_mem: 6307M
[32m[03/25 08:01:10 d2.utils.events]: [39m eta: 1:41:47  iter: 4499  total_loss: 0.759  loss_cls: 0.4029  loss_box_reg: 0.3029  loss_rpn_cls: 0.01909  loss_rpn_loc: 0.03123  time: 0.5829  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 08:01:22 d2.utils.events]: [39m eta: 1:41:35  iter: 4519  total_loss: 0.7098  loss_cls: 0.3691  loss_box_reg: 0.2396  loss_rpn_cls: 0.01907  loss_rpn_loc: 0.02402  time: 0.5829  data_time: 0.0141  lr: 0.001  max_mem: 6307M
[32m[03/25 08:01:34 d2.utils.events]: [39m eta: 1:41:23  iter: 4539  total_loss: 0.7707  loss_cls: 0.3956  loss_box_reg: 0.2813  loss_rpn_cls: 0.02327  loss_rpn_loc: 0.04433  time: 0.5829  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:01:45 d2.utils.events]: [39m eta: 1:41:11  iter: 4559  total_loss: 0.5966  loss_cls: 0.3624  loss_box_reg: 0.2346  loss_rpn_cls: 0.01445  loss_rpn_loc: 0.01346  time: 0.5829  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:01:57 d2.utils.events]: [39m eta: 1:40:59  iter: 4579  total_loss: 0.6125  loss_cls: 0.3324  loss_box_reg: 0.2453  loss_rpn_cls: 0.009563  loss_rpn_loc: 0.01527  time: 0.5829  data_time: 0.0144  lr: 0.001  max_mem: 6307M
[32m[03/25 08:02:09 d2.utils.events]: [39m eta: 1:40:47  iter: 4599  total_loss: 0.5612  loss_cls: 0.3383  loss_box_reg: 0.2085  loss_rpn_cls: 0.01307  loss_rpn_loc: 0.03274  time: 0.5829  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:02:20 d2.utils.events]: [39m eta: 1:40:35  iter: 4619  total_loss: 0.7537  loss_cls: 0.3591  loss_box_reg: 0.275  loss_rpn_cls: 0.02374  loss_rpn_loc: 0.03397  time: 0.5829  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 08:02:32 d2.utils.events]: [39m eta: 1:40:24  iter: 4639  total_loss: 0.7103  loss_cls: 0.381  loss_box_reg: 0.2666  loss_rpn_cls: 0.02877  loss_rpn_loc: 0.02443  time: 0.5829  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:02:44 d2.utils.events]: [39m eta: 1:40:13  iter: 4659  total_loss: 0.7005  loss_cls: 0.3474  loss_box_reg: 0.2691  loss_rpn_cls: 0.02389  loss_rpn_loc: 0.03233  time: 0.5829  data_time: 0.0144  lr: 0.001  max_mem: 6307M
[32m[03/25 08:02:55 d2.utils.events]: [39m eta: 1:40:01  iter: 4679  total_loss: 0.6421  loss_cls: 0.3487  loss_box_reg: 0.2671  loss_rpn_cls: 0.01335  loss_rpn_loc: 0.0158  time: 0.5829  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 08:03:07 d2.utils.events]: [39m eta: 1:39:49  iter: 4699  total_loss: 0.635  loss_cls: 0.3521  loss_box_reg: 0.2216  loss_rpn_cls: 0.01159  loss_rpn_loc: 0.0183  time: 0.5829  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:03:19 d2.utils.events]: [39m eta: 1:39:37  iter: 4719  total_loss: 0.7492  loss_cls: 0.4294  loss_box_reg: 0.2412  loss_rpn_cls: 0.01585  loss_rpn_loc: 0.01762  time: 0.5829  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 08:03:30 d2.utils.events]: [39m eta: 1:39:26  iter: 4739  total_loss: 0.6698  loss_cls: 0.3689  loss_box_reg: 0.2276  loss_rpn_cls: 0.01531  loss_rpn_loc: 0.02495  time: 0.5829  data_time: 0.0139  lr: 0.001  max_mem: 6307M
[32m[03/25 08:03:42 d2.utils.events]: [39m eta: 1:39:14  iter: 4759  total_loss: 0.6528  loss_cls: 0.3288  loss_box_reg: 0.2646  loss_rpn_cls: 0.0188  loss_rpn_loc: 0.02105  time: 0.5829  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:03:54 d2.utils.events]: [39m eta: 1:39:02  iter: 4779  total_loss: 0.6429  loss_cls: 0.3247  loss_box_reg: 0.247  loss_rpn_cls: 0.01567  loss_rpn_loc: 0.01828  time: 0.5829  data_time: 0.0138  lr: 0.001  max_mem: 6307M
[32m[03/25 08:04:06 d2.utils.events]: [39m eta: 1:38:51  iter: 4799  total_loss: 0.6856  loss_cls: 0.3685  loss_box_reg: 0.2413  loss_rpn_cls: 0.02827  loss_rpn_loc: 0.02925  time: 0.5829  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:04:17 d2.utils.events]: [39m eta: 1:38:39  iter: 4819  total_loss: 0.7269  loss_cls: 0.3676  loss_box_reg: 0.2837  loss_rpn_cls: 0.02131  loss_rpn_loc: 0.02915  time: 0.5829  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 08:04:29 d2.utils.events]: [39m eta: 1:38:27  iter: 4839  total_loss: 0.743  loss_cls: 0.3597  loss_box_reg: 0.2998  loss_rpn_cls: 0.02374  loss_rpn_loc: 0.03056  time: 0.5829  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 08:04:41 d2.utils.events]: [39m eta: 1:38:16  iter: 4859  total_loss: 0.6505  loss_cls: 0.3339  loss_box_reg: 0.2843  loss_rpn_cls: 0.01673  loss_rpn_loc: 0.02564  time: 0.5829  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 08:04:53 d2.utils.events]: [39m eta: 1:38:04  iter: 4879  total_loss: 0.7577  loss_cls: 0.4436  loss_box_reg: 0.2603  loss_rpn_cls: 0.0143  loss_rpn_loc: 0.02604  time: 0.5830  data_time: 0.0139  lr: 0.001  max_mem: 6307M
[32m[03/25 08:05:04 d2.utils.events]: [39m eta: 1:37:54  iter: 4899  total_loss: 0.7282  loss_cls: 0.3516  loss_box_reg: 0.2717  loss_rpn_cls: 0.01243  loss_rpn_loc: 0.03122  time: 0.5830  data_time: 0.0146  lr: 0.001  max_mem: 6307M
[32m[03/25 08:05:16 d2.utils.events]: [39m eta: 1:37:43  iter: 4919  total_loss: 0.5423  loss_cls: 0.2766  loss_box_reg: 0.2156  loss_rpn_cls: 0.009187  loss_rpn_loc: 0.01788  time: 0.5830  data_time: 0.0150  lr: 0.001  max_mem: 6307M
[32m[03/25 08:05:28 d2.utils.events]: [39m eta: 1:37:32  iter: 4939  total_loss: 0.7334  loss_cls: 0.3353  loss_box_reg: 0.3277  loss_rpn_cls: 0.0243  loss_rpn_loc: 0.0337  time: 0.5830  data_time: 0.0128  lr: 0.001  max_mem: 6307M
[32m[03/25 08:05:39 d2.utils.events]: [39m eta: 1:37:20  iter: 4959  total_loss: 0.7158  loss_cls: 0.3484  loss_box_reg: 0.2632  loss_rpn_cls: 0.0266  loss_rpn_loc: 0.02805  time: 0.5830  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 08:05:51 d2.utils.events]: [39m eta: 1:37:09  iter: 4979  total_loss: 0.5903  loss_cls: 0.2998  loss_box_reg: 0.2897  loss_rpn_cls: 0.01812  loss_rpn_loc: 0.02924  time: 0.5830  data_time: 0.0144  lr: 0.001  max_mem: 6307M
[32m[03/25 08:06:03 d2.utils.events]: [39m eta: 1:36:58  iter: 4999  total_loss: 0.6822  loss_cls: 0.3647  loss_box_reg: 0.233  loss_rpn_cls: 0.009288  loss_rpn_loc: 0.01659  time: 0.5830  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 08:06:15 d2.utils.events]: [39m eta: 1:36:46  iter: 5019  total_loss: 0.6135  loss_cls: 0.3335  loss_box_reg: 0.2609  loss_rpn_cls: 0.01416  loss_rpn_loc: 0.02119  time: 0.5830  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 08:06:26 d2.utils.events]: [39m eta: 1:36:35  iter: 5039  total_loss: 0.736  loss_cls: 0.3818  loss_box_reg: 0.2776  loss_rpn_cls: 0.02151  loss_rpn_loc: 0.02796  time: 0.5831  data_time: 0.0157  lr: 0.001  max_mem: 6307M
[32m[03/25 08:06:38 d2.utils.events]: [39m eta: 1:36:23  iter: 5059  total_loss: 0.6024  loss_cls: 0.3099  loss_box_reg: 0.2463  loss_rpn_cls: 0.01083  loss_rpn_loc: 0.02634  time: 0.5830  data_time: 0.0129  lr: 0.001  max_mem: 6307M
[32m[03/25 08:06:50 d2.utils.events]: [39m eta: 1:36:12  iter: 5079  total_loss: 0.6795  loss_cls: 0.3612  loss_box_reg: 0.2842  loss_rpn_cls: 0.02063  loss_rpn_loc: 0.02686  time: 0.5831  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 08:07:02 d2.utils.events]: [39m eta: 1:36:02  iter: 5099  total_loss: 0.6168  loss_cls: 0.3127  loss_box_reg: 0.227  loss_rpn_cls: 0.01458  loss_rpn_loc: 0.01343  time: 0.5831  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:07:13 d2.utils.events]: [39m eta: 1:35:51  iter: 5119  total_loss: 0.676  loss_cls: 0.3344  loss_box_reg: 0.2696  loss_rpn_cls: 0.01163  loss_rpn_loc: 0.02187  time: 0.5831  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 08:07:25 d2.utils.events]: [39m eta: 1:35:40  iter: 5139  total_loss: 0.6851  loss_cls: 0.3591  loss_box_reg: 0.2573  loss_rpn_cls: 0.02172  loss_rpn_loc: 0.0281  time: 0.5831  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:07:37 d2.utils.events]: [39m eta: 1:35:29  iter: 5159  total_loss: 0.768  loss_cls: 0.4037  loss_box_reg: 0.2862  loss_rpn_cls: 0.01781  loss_rpn_loc: 0.04268  time: 0.5831  data_time: 0.0129  lr: 0.001  max_mem: 6307M
[32m[03/25 08:07:48 d2.utils.events]: [39m eta: 1:35:17  iter: 5179  total_loss: 0.5719  loss_cls: 0.3206  loss_box_reg: 0.1795  loss_rpn_cls: 0.01139  loss_rpn_loc: 0.03156  time: 0.5831  data_time: 0.0144  lr: 0.001  max_mem: 6307M
[32m[03/25 08:08:00 d2.utils.events]: [39m eta: 1:35:05  iter: 5199  total_loss: 0.6702  loss_cls: 0.3432  loss_box_reg: 0.2602  loss_rpn_cls: 0.02086  loss_rpn_loc: 0.01941  time: 0.5831  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 08:08:12 d2.utils.events]: [39m eta: 1:34:54  iter: 5219  total_loss: 0.585  loss_cls: 0.3567  loss_box_reg: 0.182  loss_rpn_cls: 0.008791  loss_rpn_loc: 0.0143  time: 0.5831  data_time: 0.0129  lr: 0.001  max_mem: 6307M
[32m[03/25 08:08:24 d2.utils.events]: [39m eta: 1:34:43  iter: 5239  total_loss: 0.6568  loss_cls: 0.3524  loss_box_reg: 0.2565  loss_rpn_cls: 0.01492  loss_rpn_loc: 0.0227  time: 0.5831  data_time: 0.0143  lr: 0.001  max_mem: 6307M
[32m[03/25 08:08:35 d2.utils.events]: [39m eta: 1:34:32  iter: 5259  total_loss: 0.7039  loss_cls: 0.3972  loss_box_reg: 0.2324  loss_rpn_cls: 0.01387  loss_rpn_loc: 0.02233  time: 0.5831  data_time: 0.0129  lr: 0.001  max_mem: 6307M
[32m[03/25 08:08:47 d2.utils.events]: [39m eta: 1:34:21  iter: 5279  total_loss: 0.7181  loss_cls: 0.3802  loss_box_reg: 0.2552  loss_rpn_cls: 0.01285  loss_rpn_loc: 0.01939  time: 0.5831  data_time: 0.0141  lr: 0.001  max_mem: 6307M
[32m[03/25 08:08:59 d2.utils.events]: [39m eta: 1:34:09  iter: 5299  total_loss: 0.6526  loss_cls: 0.3753  loss_box_reg: 0.2227  loss_rpn_cls: 0.01397  loss_rpn_loc: 0.01648  time: 0.5832  data_time: 0.0146  lr: 0.001  max_mem: 6307M
[32m[03/25 08:09:11 d2.utils.events]: [39m eta: 1:33:59  iter: 5319  total_loss: 0.7409  loss_cls: 0.3556  loss_box_reg: 0.262  loss_rpn_cls: 0.01576  loss_rpn_loc: 0.03566  time: 0.5832  data_time: 0.0159  lr: 0.001  max_mem: 6307M
[32m[03/25 08:09:22 d2.utils.events]: [39m eta: 1:33:48  iter: 5339  total_loss: 0.5606  loss_cls: 0.3021  loss_box_reg: 0.2214  loss_rpn_cls: 0.01158  loss_rpn_loc: 0.02028  time: 0.5832  data_time: 0.0144  lr: 0.001  max_mem: 6307M
[32m[03/25 08:09:34 d2.utils.events]: [39m eta: 1:33:37  iter: 5359  total_loss: 0.7164  loss_cls: 0.385  loss_box_reg: 0.2846  loss_rpn_cls: 0.0154  loss_rpn_loc: 0.02454  time: 0.5832  data_time: 0.0151  lr: 0.001  max_mem: 6307M
[32m[03/25 08:09:46 d2.utils.events]: [39m eta: 1:33:26  iter: 5379  total_loss: 0.6993  loss_cls: 0.3849  loss_box_reg: 0.2465  loss_rpn_cls: 0.02015  loss_rpn_loc: 0.02217  time: 0.5832  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:09:57 d2.utils.events]: [39m eta: 1:33:14  iter: 5399  total_loss: 0.6652  loss_cls: 0.3664  loss_box_reg: 0.2388  loss_rpn_cls: 0.01419  loss_rpn_loc: 0.01737  time: 0.5832  data_time: 0.0149  lr: 0.001  max_mem: 6307M
[32m[03/25 08:10:09 d2.utils.events]: [39m eta: 1:33:02  iter: 5419  total_loss: 0.6522  loss_cls: 0.3228  loss_box_reg: 0.2163  loss_rpn_cls: 0.01553  loss_rpn_loc: 0.02144  time: 0.5832  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 08:10:21 d2.utils.events]: [39m eta: 1:32:50  iter: 5439  total_loss: 0.6393  loss_cls: 0.3212  loss_box_reg: 0.2361  loss_rpn_cls: 0.01298  loss_rpn_loc: 0.01579  time: 0.5832  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 08:10:33 d2.utils.events]: [39m eta: 1:32:39  iter: 5459  total_loss: 0.6411  loss_cls: 0.3634  loss_box_reg: 0.2662  loss_rpn_cls: 0.016  loss_rpn_loc: 0.02197  time: 0.5832  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 08:10:44 d2.utils.events]: [39m eta: 1:32:27  iter: 5479  total_loss: 0.6867  loss_cls: 0.3444  loss_box_reg: 0.2373  loss_rpn_cls: 0.02458  loss_rpn_loc: 0.02104  time: 0.5832  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 08:10:56 d2.utils.events]: [39m eta: 1:32:16  iter: 5499  total_loss: 0.6744  loss_cls: 0.3576  loss_box_reg: 0.2551  loss_rpn_cls: 0.0159  loss_rpn_loc: 0.0208  time: 0.5832  data_time: 0.0141  lr: 0.001  max_mem: 6307M
[32m[03/25 08:11:08 d2.utils.events]: [39m eta: 1:32:04  iter: 5519  total_loss: 0.6243  loss_cls: 0.3289  loss_box_reg: 0.2302  loss_rpn_cls: 0.01979  loss_rpn_loc: 0.03164  time: 0.5832  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:11:19 d2.utils.events]: [39m eta: 1:31:53  iter: 5539  total_loss: 0.6954  loss_cls: 0.3747  loss_box_reg: 0.2627  loss_rpn_cls: 0.0194  loss_rpn_loc: 0.02272  time: 0.5832  data_time: 0.0138  lr: 0.001  max_mem: 6307M
[32m[03/25 08:11:31 d2.utils.events]: [39m eta: 1:31:41  iter: 5559  total_loss: 0.5961  loss_cls: 0.3181  loss_box_reg: 0.2526  loss_rpn_cls: 0.01145  loss_rpn_loc: 0.01572  time: 0.5832  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:11:43 d2.utils.events]: [39m eta: 1:31:29  iter: 5579  total_loss: 0.5932  loss_cls: 0.321  loss_box_reg: 0.2256  loss_rpn_cls: 0.0112  loss_rpn_loc: 0.0158  time: 0.5832  data_time: 0.0138  lr: 0.001  max_mem: 6307M
[32m[03/25 08:11:54 d2.utils.events]: [39m eta: 1:31:18  iter: 5599  total_loss: 0.6505  loss_cls: 0.3322  loss_box_reg: 0.2591  loss_rpn_cls: 0.01651  loss_rpn_loc: 0.02032  time: 0.5832  data_time: 0.0143  lr: 0.001  max_mem: 6307M
[32m[03/25 08:12:06 d2.utils.events]: [39m eta: 1:31:07  iter: 5619  total_loss: 0.5169  loss_cls: 0.2994  loss_box_reg: 0.2067  loss_rpn_cls: 0.01233  loss_rpn_loc: 0.01246  time: 0.5832  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:12:18 d2.utils.events]: [39m eta: 1:30:55  iter: 5639  total_loss: 0.7129  loss_cls: 0.3741  loss_box_reg: 0.2927  loss_rpn_cls: 0.0148  loss_rpn_loc: 0.03146  time: 0.5833  data_time: 0.0143  lr: 0.001  max_mem: 6307M
[32m[03/25 08:12:30 d2.utils.events]: [39m eta: 1:30:44  iter: 5659  total_loss: 0.5431  loss_cls: 0.2715  loss_box_reg: 0.2325  loss_rpn_cls: 0.01544  loss_rpn_loc: 0.01582  time: 0.5833  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:12:41 d2.utils.events]: [39m eta: 1:30:32  iter: 5679  total_loss: 0.6146  loss_cls: 0.3155  loss_box_reg: 0.2255  loss_rpn_cls: 0.01791  loss_rpn_loc: 0.02294  time: 0.5833  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 08:12:53 d2.utils.events]: [39m eta: 1:30:21  iter: 5699  total_loss: 0.5806  loss_cls: 0.2961  loss_box_reg: 0.2231  loss_rpn_cls: 0.01656  loss_rpn_loc: 0.02606  time: 0.5833  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 08:13:05 d2.utils.events]: [39m eta: 1:30:09  iter: 5719  total_loss: 0.5659  loss_cls: 0.2988  loss_box_reg: 0.2165  loss_rpn_cls: 0.01184  loss_rpn_loc: 0.02156  time: 0.5833  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 08:13:16 d2.utils.events]: [39m eta: 1:29:57  iter: 5739  total_loss: 0.5525  loss_cls: 0.3327  loss_box_reg: 0.2094  loss_rpn_cls: 0.0131  loss_rpn_loc: 0.02749  time: 0.5833  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 08:13:28 d2.utils.events]: [39m eta: 1:29:46  iter: 5759  total_loss: 0.6197  loss_cls: 0.3032  loss_box_reg: 0.2544  loss_rpn_cls: 0.01287  loss_rpn_loc: 0.02383  time: 0.5833  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 08:13:40 d2.utils.events]: [39m eta: 1:29:34  iter: 5779  total_loss: 0.5975  loss_cls: 0.3183  loss_box_reg: 0.2413  loss_rpn_cls: 0.01424  loss_rpn_loc: 0.02075  time: 0.5833  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 08:13:51 d2.utils.events]: [39m eta: 1:29:22  iter: 5799  total_loss: 0.704  loss_cls: 0.3791  loss_box_reg: 0.3108  loss_rpn_cls: 0.009904  loss_rpn_loc: 0.01676  time: 0.5833  data_time: 0.0128  lr: 0.001  max_mem: 6307M
[32m[03/25 08:14:03 d2.utils.events]: [39m eta: 1:29:10  iter: 5819  total_loss: 0.7014  loss_cls: 0.343  loss_box_reg: 0.2807  loss_rpn_cls: 0.0188  loss_rpn_loc: 0.03016  time: 0.5833  data_time: 0.0142  lr: 0.001  max_mem: 6307M
[32m[03/25 08:14:15 d2.utils.events]: [39m eta: 1:28:59  iter: 5839  total_loss: 0.7728  loss_cls: 0.3987  loss_box_reg: 0.3117  loss_rpn_cls: 0.0169  loss_rpn_loc: 0.02698  time: 0.5833  data_time: 0.0139  lr: 0.001  max_mem: 6307M
[32m[03/25 08:14:26 d2.utils.events]: [39m eta: 1:28:46  iter: 5859  total_loss: 0.6862  loss_cls: 0.3658  loss_box_reg: 0.2529  loss_rpn_cls: 0.01492  loss_rpn_loc: 0.02449  time: 0.5833  data_time: 0.0127  lr: 0.001  max_mem: 6307M
[32m[03/25 08:14:38 d2.utils.events]: [39m eta: 1:28:35  iter: 5879  total_loss: 0.5385  loss_cls: 0.3054  loss_box_reg: 0.2251  loss_rpn_cls: 0.01317  loss_rpn_loc: 0.01243  time: 0.5833  data_time: 0.0149  lr: 0.001  max_mem: 6307M
[32m[03/25 08:14:50 d2.utils.events]: [39m eta: 1:28:23  iter: 5899  total_loss: 0.6335  loss_cls: 0.3405  loss_box_reg: 0.2545  loss_rpn_cls: 0.0187  loss_rpn_loc: 0.02857  time: 0.5833  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:15:01 d2.utils.events]: [39m eta: 1:28:10  iter: 5919  total_loss: 0.6744  loss_cls: 0.3575  loss_box_reg: 0.2373  loss_rpn_cls: 0.01743  loss_rpn_loc: 0.03921  time: 0.5833  data_time: 0.0138  lr: 0.001  max_mem: 6307M
[32m[03/25 08:15:13 d2.utils.events]: [39m eta: 1:27:58  iter: 5939  total_loss: 0.6803  loss_cls: 0.3643  loss_box_reg: 0.2641  loss_rpn_cls: 0.01183  loss_rpn_loc: 0.02113  time: 0.5833  data_time: 0.0141  lr: 0.001  max_mem: 6307M
[32m[03/25 08:15:25 d2.utils.events]: [39m eta: 1:27:47  iter: 5959  total_loss: 0.6973  loss_cls: 0.3487  loss_box_reg: 0.2587  loss_rpn_cls: 0.01722  loss_rpn_loc: 0.03687  time: 0.5833  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 08:15:36 d2.utils.events]: [39m eta: 1:27:36  iter: 5979  total_loss: 0.6542  loss_cls: 0.3225  loss_box_reg: 0.2999  loss_rpn_cls: 0.02393  loss_rpn_loc: 0.02973  time: 0.5833  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 08:15:50 d2.data.datasets.coco]: [39mLoaded 4883 images in COCO format from ../../dataset/train.json
[32m[03/25 08:15:50 d2.data.dataset_mapper]: [39m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[03/25 08:15:50 d2.data.common]: [39mSerializing 4883 elements to byte tensors and concatenating them all ...
[32m[03/25 08:15:50 d2.data.common]: [39mSerialized dataset takes 2.19 MiB
[31m[5mWARNING[39m[25m [32m[03/25 08:15:50 d2.evaluation.coco_evaluation]: [39mCOCO Evaluator instantiated using config, this is deprecated behavior. Please pass in explicit arguments instead.
[32m[03/25 08:15:50 d2.evaluation.evaluator]: [39mStart inference on 4883 batches
[32m[03/25 08:15:51 d2.evaluation.evaluator]: [39mInference done 11/4883. Dataloading: 0.0007 s/iter. Inference: 0.0449 s/iter. Eval: 0.0002 s/iter. Total: 0.0459 s/iter. ETA=0:03:43
[32m[03/25 08:15:56 d2.evaluation.evaluator]: [39mInference done 119/4883. Dataloading: 0.0011 s/iter. Inference: 0.0450 s/iter. Eval: 0.0003 s/iter. Total: 0.0464 s/iter. ETA=0:03:41
[32m[03/25 08:16:01 d2.evaluation.evaluator]: [39mInference done 227/4883. Dataloading: 0.0011 s/iter. Inference: 0.0450 s/iter. Eval: 0.0003 s/iter. Total: 0.0465 s/iter. ETA=0:03:36
[32m[03/25 08:16:06 d2.evaluation.evaluator]: [39mInference done 333/4883. Dataloading: 0.0012 s/iter. Inference: 0.0452 s/iter. Eval: 0.0003 s/iter. Total: 0.0467 s/iter. ETA=0:03:32
[32m[03/25 08:16:11 d2.evaluation.evaluator]: [39mInference done 441/4883. Dataloading: 0.0012 s/iter. Inference: 0.0452 s/iter. Eval: 0.0003 s/iter. Total: 0.0467 s/iter. ETA=0:03:27
[32m[03/25 08:16:16 d2.evaluation.evaluator]: [39mInference done 548/4883. Dataloading: 0.0012 s/iter. Inference: 0.0452 s/iter. Eval: 0.0003 s/iter. Total: 0.0468 s/iter. ETA=0:03:22
[32m[03/25 08:16:21 d2.evaluation.evaluator]: [39mInference done 655/4883. Dataloading: 0.0012 s/iter. Inference: 0.0453 s/iter. Eval: 0.0003 s/iter. Total: 0.0468 s/iter. ETA=0:03:17
[32m[03/25 08:16:26 d2.evaluation.evaluator]: [39mInference done 762/4883. Dataloading: 0.0012 s/iter. Inference: 0.0453 s/iter. Eval: 0.0003 s/iter. Total: 0.0468 s/iter. ETA=0:03:12
[32m[03/25 08:16:31 d2.evaluation.evaluator]: [39mInference done 869/4883. Dataloading: 0.0012 s/iter. Inference: 0.0453 s/iter. Eval: 0.0003 s/iter. Total: 0.0468 s/iter. ETA=0:03:08
[32m[03/25 08:16:36 d2.evaluation.evaluator]: [39mInference done 975/4883. Dataloading: 0.0012 s/iter. Inference: 0.0453 s/iter. Eval: 0.0003 s/iter. Total: 0.0469 s/iter. ETA=0:03:03
[32m[03/25 08:16:41 d2.evaluation.evaluator]: [39mInference done 1081/4883. Dataloading: 0.0012 s/iter. Inference: 0.0454 s/iter. Eval: 0.0003 s/iter. Total: 0.0469 s/iter. ETA=0:02:58
[32m[03/25 08:16:46 d2.evaluation.evaluator]: [39mInference done 1186/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0470 s/iter. ETA=0:02:53
[32m[03/25 08:16:51 d2.evaluation.evaluator]: [39mInference done 1293/4883. Dataloading: 0.0012 s/iter. Inference: 0.0455 s/iter. Eval: 0.0003 s/iter. Total: 0.0470 s/iter. ETA=0:02:48
[32m[03/25 08:16:56 d2.evaluation.evaluator]: [39mInference done 1391/4883. Dataloading: 0.0012 s/iter. Inference: 0.0457 s/iter. Eval: 0.0003 s/iter. Total: 0.0473 s/iter. ETA=0:02:45
[32m[03/25 08:17:01 d2.evaluation.evaluator]: [39mInference done 1491/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:02:41
[32m[03/25 08:17:06 d2.evaluation.evaluator]: [39mInference done 1597/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:02:36
[32m[03/25 08:17:11 d2.evaluation.evaluator]: [39mInference done 1703/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:02:30
[32m[03/25 08:17:16 d2.evaluation.evaluator]: [39mInference done 1810/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:02:25
[32m[03/25 08:17:22 d2.evaluation.evaluator]: [39mInference done 1917/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0474 s/iter. ETA=0:02:20
[32m[03/25 08:17:27 d2.evaluation.evaluator]: [39mInference done 2023/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:02:15
[32m[03/25 08:17:32 d2.evaluation.evaluator]: [39mInference done 2123/4883. Dataloading: 0.0012 s/iter. Inference: 0.0460 s/iter. Eval: 0.0003 s/iter. Total: 0.0476 s/iter. ETA=0:02:11
[32m[03/25 08:17:37 d2.evaluation.evaluator]: [39mInference done 2220/4883. Dataloading: 0.0012 s/iter. Inference: 0.0462 s/iter. Eval: 0.0003 s/iter. Total: 0.0478 s/iter. ETA=0:02:07
[32m[03/25 08:17:42 d2.evaluation.evaluator]: [39mInference done 2326/4883. Dataloading: 0.0012 s/iter. Inference: 0.0462 s/iter. Eval: 0.0003 s/iter. Total: 0.0477 s/iter. ETA=0:02:02
[32m[03/25 08:17:47 d2.evaluation.evaluator]: [39mInference done 2432/4883. Dataloading: 0.0012 s/iter. Inference: 0.0462 s/iter. Eval: 0.0003 s/iter. Total: 0.0477 s/iter. ETA=0:01:56
[32m[03/25 08:17:52 d2.evaluation.evaluator]: [39mInference done 2538/4883. Dataloading: 0.0012 s/iter. Inference: 0.0461 s/iter. Eval: 0.0003 s/iter. Total: 0.0477 s/iter. ETA=0:01:51
[32m[03/25 08:17:57 d2.evaluation.evaluator]: [39mInference done 2645/4883. Dataloading: 0.0012 s/iter. Inference: 0.0461 s/iter. Eval: 0.0003 s/iter. Total: 0.0477 s/iter. ETA=0:01:46
[32m[03/25 08:18:02 d2.evaluation.evaluator]: [39mInference done 2748/4883. Dataloading: 0.0012 s/iter. Inference: 0.0461 s/iter. Eval: 0.0003 s/iter. Total: 0.0477 s/iter. ETA=0:01:41
[32m[03/25 08:18:07 d2.evaluation.evaluator]: [39mInference done 2855/4883. Dataloading: 0.0012 s/iter. Inference: 0.0461 s/iter. Eval: 0.0003 s/iter. Total: 0.0477 s/iter. ETA=0:01:36
[32m[03/25 08:18:12 d2.evaluation.evaluator]: [39mInference done 2964/4883. Dataloading: 0.0012 s/iter. Inference: 0.0460 s/iter. Eval: 0.0003 s/iter. Total: 0.0476 s/iter. ETA=0:01:31
[32m[03/25 08:18:17 d2.evaluation.evaluator]: [39mInference done 3071/4883. Dataloading: 0.0012 s/iter. Inference: 0.0460 s/iter. Eval: 0.0003 s/iter. Total: 0.0476 s/iter. ETA=0:01:26
[32m[03/25 08:18:22 d2.evaluation.evaluator]: [39mInference done 3178/4883. Dataloading: 0.0012 s/iter. Inference: 0.0460 s/iter. Eval: 0.0003 s/iter. Total: 0.0476 s/iter. ETA=0:01:21
[32m[03/25 08:18:27 d2.evaluation.evaluator]: [39mInference done 3285/4883. Dataloading: 0.0012 s/iter. Inference: 0.0460 s/iter. Eval: 0.0003 s/iter. Total: 0.0476 s/iter. ETA=0:01:16
[32m[03/25 08:18:32 d2.evaluation.evaluator]: [39mInference done 3392/4883. Dataloading: 0.0012 s/iter. Inference: 0.0460 s/iter. Eval: 0.0003 s/iter. Total: 0.0476 s/iter. ETA=0:01:10
[32m[03/25 08:18:37 d2.evaluation.evaluator]: [39mInference done 3499/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:01:05
[32m[03/25 08:18:42 d2.evaluation.evaluator]: [39mInference done 3604/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:01:00
[32m[03/25 08:18:47 d2.evaluation.evaluator]: [39mInference done 3711/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:55
[32m[03/25 08:18:52 d2.evaluation.evaluator]: [39mInference done 3818/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:50
[32m[03/25 08:18:57 d2.evaluation.evaluator]: [39mInference done 3925/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:45
[32m[03/25 08:19:02 d2.evaluation.evaluator]: [39mInference done 4031/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:40
[32m[03/25 08:19:07 d2.evaluation.evaluator]: [39mInference done 4138/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:35
[32m[03/25 08:19:12 d2.evaluation.evaluator]: [39mInference done 4245/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:30
[32m[03/25 08:19:17 d2.evaluation.evaluator]: [39mInference done 4348/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:25
[32m[03/25 08:19:22 d2.evaluation.evaluator]: [39mInference done 4453/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:20
[32m[03/25 08:19:27 d2.evaluation.evaluator]: [39mInference done 4556/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:15
[32m[03/25 08:19:32 d2.evaluation.evaluator]: [39mInference done 4664/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:10
[32m[03/25 08:19:37 d2.evaluation.evaluator]: [39mInference done 4772/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:05
[32m[03/25 08:19:42 d2.evaluation.evaluator]: [39mInference done 4873/4883. Dataloading: 0.0012 s/iter. Inference: 0.0459 s/iter. Eval: 0.0003 s/iter. Total: 0.0475 s/iter. ETA=0:00:00
[32m[03/25 08:19:43 d2.evaluation.evaluator]: [39mTotal inference time: 0:03:51.898149 (0.047540 s / iter per device, on 1 devices)
[32m[03/25 08:19:43 d2.evaluation.evaluator]: [39mTotal inference pure compute time: 0:03:43 (0.045901 s / iter per device, on 1 devices)
[32m[03/25 08:19:44 d2.evaluation.coco_evaluation]: [39mPreparing results for COCO format ...
[32m[03/25 08:19:44 d2.evaluation.coco_evaluation]: [39mSaving results to ./output_eval/coco_instances_results.json
[32m[03/25 08:19:45 d2.evaluation.coco_evaluation]: [39mEvaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.68s)
creating index...
index created!
[32m[03/25 08:19:45 d2.evaluation.fast_eval_api]: [39mEvaluate annotation type *bbox*
[32m[03/25 08:19:48 d2.evaluation.fast_eval_api]: [39mCOCOeval_opt.evaluate() finished in 2.80 seconds.
[32m[03/25 08:19:48 d2.evaluation.fast_eval_api]: [39mAccumulating evaluation results...
[32m[03/25 08:19:49 d2.evaluation.fast_eval_api]: [39mCOCOeval_opt.accumulate() finished in 0.71 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.383
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.527
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.422
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.008
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.088
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.451
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.289
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.547
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.590
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.020
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.270
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.666
[32m[03/25 08:19:49 d2.evaluation.coco_evaluation]: [39mEvaluation results for bbox:
|   AP   |  AP50  |  AP75  |  APs  |  APm  |  APl   |
|:------:|:------:|:------:|:-----:|:-----:|:------:|
| 38.328 | 52.731 | 42.217 | 0.834 | 8.833 | 45.143 |
[32m[03/25 08:19:49 d2.evaluation.coco_evaluation]: [39mPer-category bbox AP:
| category      | AP     | category    | AP     | category   | AP     |
|:--------------|:-------|:------------|:-------|:-----------|:-------|
| General trash | 22.054 | Paper       | 30.190 | Paper pack | 39.653 |
| Metal         | 36.899 | Glass       | 44.006 | Plastic    | 27.061 |
| Styrofoam     | 32.001 | Plastic bag | 52.983 | Battery    | 57.602 |
| Clothing      | 40.831 |             |        |            |        |
[32m[03/25 08:19:49 d2.engine.defaults]: [39mEvaluation results for coco_trash_train in csv format:
[32m[03/25 08:19:49 d2.evaluation.testing]: [39mcopypaste: Task: bbox
[32m[03/25 08:19:49 d2.evaluation.testing]: [39mcopypaste: AP,AP50,AP75,APs,APm,APl
[32m[03/25 08:19:49 d2.evaluation.testing]: [39mcopypaste: 38.3279,52.7306,42.2174,0.8345,8.8328,45.1433
[32m[03/25 08:19:49 d2.utils.events]: [39m eta: 1:27:23  iter: 5999  total_loss: 0.6386  loss_cls: 0.3184  loss_box_reg: 0.2664  loss_rpn_cls: 0.01694  loss_rpn_loc: 0.02245  time: 0.5833  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 08:20:01 d2.utils.events]: [39m eta: 1:27:11  iter: 6019  total_loss: 0.564  loss_cls: 0.2999  loss_box_reg: 0.2081  loss_rpn_cls: 0.01384  loss_rpn_loc: 0.0253  time: 0.5833  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:20:12 d2.utils.events]: [39m eta: 1:26:59  iter: 6039  total_loss: 0.5659  loss_cls: 0.2984  loss_box_reg: 0.2116  loss_rpn_cls: 0.01372  loss_rpn_loc: 0.01971  time: 0.5832  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:20:24 d2.utils.events]: [39m eta: 1:26:48  iter: 6059  total_loss: 0.6036  loss_cls: 0.3118  loss_box_reg: 0.2317  loss_rpn_cls: 0.01664  loss_rpn_loc: 0.01759  time: 0.5832  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:20:36 d2.utils.events]: [39m eta: 1:26:36  iter: 6079  total_loss: 0.5696  loss_cls: 0.2933  loss_box_reg: 0.2151  loss_rpn_cls: 0.01666  loss_rpn_loc: 0.02354  time: 0.5832  data_time: 0.0141  lr: 0.001  max_mem: 6307M
[32m[03/25 08:20:47 d2.utils.events]: [39m eta: 1:26:24  iter: 6099  total_loss: 0.6797  loss_cls: 0.3353  loss_box_reg: 0.2581  loss_rpn_cls: 0.0118  loss_rpn_loc: 0.01492  time: 0.5832  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 08:20:59 d2.utils.events]: [39m eta: 1:26:11  iter: 6119  total_loss: 0.7266  loss_cls: 0.3573  loss_box_reg: 0.2949  loss_rpn_cls: 0.01949  loss_rpn_loc: 0.03686  time: 0.5832  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 08:21:11 d2.utils.events]: [39m eta: 1:25:59  iter: 6139  total_loss: 0.6051  loss_cls: 0.3258  loss_box_reg: 0.2184  loss_rpn_cls: 0.01246  loss_rpn_loc: 0.0226  time: 0.5832  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:21:22 d2.utils.events]: [39m eta: 1:25:47  iter: 6159  total_loss: 0.5656  loss_cls: 0.2724  loss_box_reg: 0.2403  loss_rpn_cls: 0.01264  loss_rpn_loc: 0.01915  time: 0.5832  data_time: 0.0137  lr: 0.001  max_mem: 6307M
[32m[03/25 08:21:34 d2.utils.events]: [39m eta: 1:25:36  iter: 6179  total_loss: 0.5833  loss_cls: 0.3156  loss_box_reg: 0.2219  loss_rpn_cls: 0.01423  loss_rpn_loc: 0.02296  time: 0.5832  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:21:46 d2.utils.events]: [39m eta: 1:25:24  iter: 6199  total_loss: 0.6017  loss_cls: 0.3263  loss_box_reg: 0.216  loss_rpn_cls: 0.01054  loss_rpn_loc: 0.01761  time: 0.5833  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:21:58 d2.utils.events]: [39m eta: 1:25:13  iter: 6219  total_loss: 0.6174  loss_cls: 0.3359  loss_box_reg: 0.2298  loss_rpn_cls: 0.01609  loss_rpn_loc: 0.02119  time: 0.5833  data_time: 0.0143  lr: 0.001  max_mem: 6307M
[32m[03/25 08:22:09 d2.utils.events]: [39m eta: 1:25:01  iter: 6239  total_loss: 0.6482  loss_cls: 0.3363  loss_box_reg: 0.2472  loss_rpn_cls: 0.02174  loss_rpn_loc: 0.03317  time: 0.5832  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 08:22:21 d2.utils.events]: [39m eta: 1:24:49  iter: 6259  total_loss: 0.6096  loss_cls: 0.3083  loss_box_reg: 0.2327  loss_rpn_cls: 0.01431  loss_rpn_loc: 0.02215  time: 0.5832  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:22:32 d2.utils.events]: [39m eta: 1:24:37  iter: 6279  total_loss: 0.6305  loss_cls: 0.3346  loss_box_reg: 0.2542  loss_rpn_cls: 0.01113  loss_rpn_loc: 0.01372  time: 0.5832  data_time: 0.0131  lr: 0.001  max_mem: 6307M
[32m[03/25 08:22:44 d2.utils.events]: [39m eta: 1:24:24  iter: 6299  total_loss: 0.5777  loss_cls: 0.2863  loss_box_reg: 0.2207  loss_rpn_cls: 0.01436  loss_rpn_loc: 0.02795  time: 0.5832  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:22:56 d2.utils.events]: [39m eta: 1:24:12  iter: 6319  total_loss: 0.6006  loss_cls: 0.2962  loss_box_reg: 0.2346  loss_rpn_cls: 0.0113  loss_rpn_loc: 0.02677  time: 0.5832  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:23:07 d2.utils.events]: [39m eta: 1:24:00  iter: 6339  total_loss: 0.5249  loss_cls: 0.2669  loss_box_reg: 0.2055  loss_rpn_cls: 0.006725  loss_rpn_loc: 0.0188  time: 0.5832  data_time: 0.0139  lr: 0.001  max_mem: 6307M
[32m[03/25 08:23:19 d2.utils.events]: [39m eta: 1:23:48  iter: 6359  total_loss: 0.5602  loss_cls: 0.2975  loss_box_reg: 0.2169  loss_rpn_cls: 0.009442  loss_rpn_loc: 0.02571  time: 0.5832  data_time: 0.0148  lr: 0.001  max_mem: 6307M
[32m[03/25 08:23:31 d2.utils.events]: [39m eta: 1:23:36  iter: 6379  total_loss: 0.6638  loss_cls: 0.355  loss_box_reg: 0.2471  loss_rpn_cls: 0.01918  loss_rpn_loc: 0.02477  time: 0.5832  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:23:42 d2.utils.events]: [39m eta: 1:23:24  iter: 6399  total_loss: 0.6146  loss_cls: 0.3363  loss_box_reg: 0.2766  loss_rpn_cls: 0.01717  loss_rpn_loc: 0.02392  time: 0.5832  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 08:23:54 d2.utils.events]: [39m eta: 1:23:12  iter: 6419  total_loss: 0.5685  loss_cls: 0.2806  loss_box_reg: 0.2135  loss_rpn_cls: 0.01329  loss_rpn_loc: 0.01368  time: 0.5832  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:24:06 d2.utils.events]: [39m eta: 1:23:00  iter: 6439  total_loss: 0.5453  loss_cls: 0.3065  loss_box_reg: 0.1954  loss_rpn_cls: 0.01105  loss_rpn_loc: 0.01329  time: 0.5832  data_time: 0.0130  lr: 0.001  max_mem: 6307M
[32m[03/25 08:24:18 d2.utils.events]: [39m eta: 1:22:49  iter: 6459  total_loss: 0.6113  loss_cls: 0.322  loss_box_reg: 0.2334  loss_rpn_cls: 0.01058  loss_rpn_loc: 0.02411  time: 0.5832  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:24:29 d2.utils.events]: [39m eta: 1:22:37  iter: 6479  total_loss: 0.5105  loss_cls: 0.2644  loss_box_reg: 0.1909  loss_rpn_cls: 0.009011  loss_rpn_loc: 0.02276  time: 0.5832  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 08:24:41 d2.utils.events]: [39m eta: 1:22:26  iter: 6499  total_loss: 0.5629  loss_cls: 0.2697  loss_box_reg: 0.2214  loss_rpn_cls: 0.01812  loss_rpn_loc: 0.02273  time: 0.5832  data_time: 0.0132  lr: 0.001  max_mem: 6307M
[32m[03/25 08:24:53 d2.utils.events]: [39m eta: 1:22:14  iter: 6519  total_loss: 0.5488  loss_cls: 0.2778  loss_box_reg: 0.1912  loss_rpn_cls: 0.01288  loss_rpn_loc: 0.009458  time: 0.5832  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:25:04 d2.utils.events]: [39m eta: 1:22:02  iter: 6539  total_loss: 0.6349  loss_cls: 0.3698  loss_box_reg: 0.2533  loss_rpn_cls: 0.01744  loss_rpn_loc: 0.01899  time: 0.5832  data_time: 0.0135  lr: 0.001  max_mem: 6307M
[32m[03/25 08:25:16 d2.utils.events]: [39m eta: 1:21:51  iter: 6559  total_loss: 0.729  loss_cls: 0.3687  loss_box_reg: 0.2909  loss_rpn_cls: 0.01545  loss_rpn_loc: 0.02657  time: 0.5832  data_time: 0.0134  lr: 0.001  max_mem: 6307M
[32m[03/25 08:25:28 d2.utils.events]: [39m eta: 1:21:39  iter: 6579  total_loss: 0.6223  loss_cls: 0.3086  loss_box_reg: 0.2553  loss_rpn_cls: 0.01597  loss_rpn_loc: 0.02619  time: 0.5832  data_time: 0.0159  lr: 0.001  max_mem: 6307M
[32m[03/25 08:25:39 d2.utils.events]: [39m eta: 1:21:27  iter: 6599  total_loss: 0.606  loss_cls: 0.3114  loss_box_reg: 0.2366  loss_rpn_cls: 0.01367  loss_rpn_loc: 0.0216  time: 0.5832  data_time: 0.0136  lr: 0.001  max_mem: 6307M
[32m[03/25 08:25:51 d2.utils.events]: [39m eta: 1:21:16  iter: 6619  total_loss: 0.611  loss_cls: 0.2969  loss_box_reg: 0.2133  loss_rpn_cls: 0.01064  loss_rpn_loc: 0.02662  time: 0.5832  data_time: 0.0156  lr: 0.001  max_mem: 6307M
[32m[03/25 08:26:03 d2.utils.events]: [39m eta: 1:21:04  iter: 6639  total_loss: 0.6369  loss_cls: 0.3038  loss_box_reg: 0.2563  loss_rpn_cls: 0.0116  loss_rpn_loc: 0.01407  time: 0.5832  data_time: 0.0149  lr: 0.001  max_mem: 6307M
[32m[03/25 08:26:14 d2.utils.events]: [39m eta: 1:20:52  iter: 6659  total_loss: 0.6027  loss_cls: 0.3191  loss_box_reg: 0.2734  loss_rpn_cls: 0.0138  loss_rpn_loc: 0.02332  time: 0.5832  data_time: 0.0133  lr: 0.001  max_mem: 6307M
[32m[03/25 08:26:26 d2.utils.events]: [39m eta: 1:20:40  iter: 6679  total_loss: 0.5539  loss_cls: 0.3083  loss_box_reg: 0.2187  loss_rpn_cls: 0.01463  loss_rpn_loc: 0.01642  time: 0.5832  data_time: 0.0148  lr: 0.001  max_mem: 6307M
[32m[03/25 08:26:27 d2.engine.hooks]: [39mOverall training speed: 6679 iterations in 1:04:55 (0.5833 s / it)
[32m[03/25 08:26:27 d2.engine.hooks]: [39mTotal training time: 1:13:00 (0:08:04 on hooks)
[32m[03/25 08:26:27 d2.utils.events]: [39m eta: 1:20:39  iter: 6681  total_loss: 0.606  loss_cls: 0.3294  loss_box_reg: 0.2392  loss_rpn_cls: 0.01531  loss_rpn_loc: 0.01983  time: 0.5832  data_time: 0.0148  lr: 0.001  max_mem: 6307M
Traceback (most recent call last):
  File "train.py", line 116, in <module>
    trainer.train()
  File "/opt/ml/detection/baseline/detectron2/detectron2/engine/defaults.py", line 491, in train
    super().train(self.start_iter, self.max_iter)
  File "/opt/ml/detection/baseline/detectron2/detectron2/engine/train_loop.py", line 150, in train
    self.run_step()
  File "/opt/ml/detection/baseline/detectron2/detectron2/engine/defaults.py", line 501, in run_step
    self._trainer.run_step()
  File "/opt/ml/detection/baseline/detectron2/detectron2/engine/train_loop.py", line 276, in run_step
    loss_dict = self.model(data)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/ml/detection/baseline/detectron2/detectron2/modeling/meta_arch/rcnn.py", line 163, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/ml/detection/baseline/detectron2/detectron2/modeling/roi_heads/roi_heads.py", line 727, in forward
    proposals = self.label_and_sample_proposals(proposals, targets)
  File "/opt/conda/envs/detection/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 26, in decorate_context
    return func(*args, **kwargs)
  File "/opt/ml/detection/baseline/detectron2/detectron2/modeling/roi_heads/roi_heads.py", line 258, in label_and_sample_proposals
    proposals = add_ground_truth_to_proposals(targets, proposals)
  File "/opt/ml/detection/baseline/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py", line 158, in add_ground_truth_to_proposals
    for gt_i, proposals_i in zip(gt, proposals)
  File "/opt/ml/detection/baseline/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py", line 158, in <listcomp>
    for gt_i, proposals_i in zip(gt, proposals)
  File "/opt/ml/detection/baseline/detectron2/detectron2/modeling/proposal_generator/proposal_utils.py", line 198, in add_ground_truth_to_proposals_single_image
    new_proposals = Instances.cat([proposals, gt_proposal])
  File "/opt/ml/detection/baseline/detectron2/detectron2/structures/instances.py", line 178, in cat
    values = type(v0).cat(values)
  File "/opt/ml/detection/baseline/detectron2/detectron2/structures/boxes.py", line 305, in cat
    cat_boxes = cls(torch.cat([b.tensor for b in boxes_list], dim=0))
KeyboardInterrupt